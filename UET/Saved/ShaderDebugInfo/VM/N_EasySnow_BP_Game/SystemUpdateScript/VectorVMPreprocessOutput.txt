/*0*//*1*/#line   1 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"/*2*//*3*//*4*//*5*//*6*//*7*/#pragma warning(disable:4008)/*8*/#line   7 "/Engine/Public/Platform.ush"/*9*//*10*//*11*/#line   7 "/Engine/Public/FP16Math.ush"/*12*//*13*//*14*//*15*//*16*//*17*//*18*//*19*//*20*//*21*//*22*//*23*//*24*//*25*//*26*//*27*//*28*//*29*//*30*//*31*//*32*//*33*//*34*//*35*//*36*//*37*//*38*//*39*//*40*//*41*//*42*//*43*//*44*//*45*//*46*//*47*//*48*//*49*/#line   9 "/Engine/Public/Platform.ush"/*50*//*51*//*52*//*53*//*54*//*55*//*56*//*57*//*58*//*59*//*60*//*61*//*62*//*63*//*64*//*65*//*66*//*67*//*68*//*69*//*70*//*71*//*72*//*73*//*74*//*75*//*76*//*77*//*78*//*79*//*80*//*81*//*82*//*83*//*84*//*85*//*86*//*87*//*88*//*89*//*90*//*91*//*92*//*93*//*94*/#line  66 "/Engine/Public/Platform.ush"/*95*//*96*//*97*/#line   3 "/Engine/Public/BindlessResources.ush"/*98*//*99*//*100*//*101*//*102*//*103*//*104*//*105*//*106*//*107*//*108*//*109*//*110*/#line  28 "/Engine/Public/BindlessResources.ush"/*111*//*112*//*113*//*114*//*115*//*116*//*117*//*118*//*119*//*120*//*121*//*122*//*123*//*124*//*125*//*126*//*127*/#line  87 "/Engine/Public/BindlessResources.ush"/*128*//*129*//*130*//*131*//*132*//*133*//*134*//*135*/#line  68 "/Engine/Public/Platform.ush"/*136*//*137*/#line   8 "/Engine/Public/OverloadMacros.ush"/*138*//*139*//*140*//*141*//*142*//*143*//*144*//*145*//*146*//*147*//*148*//*149*//*150*//*151*//*152*//*153*//*154*//*155*//*156*//*157*/#line  69 "/Engine/Public/Platform.ush"/*158*//*159*//*160*//*161*//*162*//*163*/#line   6 "/Engine/Public/ShaderVersion.ush"/*164*//*165*/#line  74 "/Engine/Public/Platform.ush"/*166*//*167*//*168*//*169*//*170*//*171*//*172*//*173*//*174*//*175*//*176*//*177*//*178*//*179*//*180*//*181*//*182*//*183*//*184*//*185*//*186*//*187*//*188*//*189*//*190*//*191*//*192*//*193*//*194*//*195*//*196*//*197*//*198*//*199*//*200*//*201*//*202*//*203*//*204*//*205*//*206*//*207*//*208*//*209*//*210*//*211*//*212*//*213*//*214*//*215*//*216*//*217*//*218*//*219*//*220*//*221*//*222*//*223*//*224*//*225*//*226*//*227*//*228*//*229*//*230*//*231*//*232*//*233*//*234*//*235*//*236*//*237*//*238*//*239*//*240*//*241*//*242*//*243*//*244*//*245*//*246*//*247*//*248*//*249*//*250*//*251*//*252*//*253*//*254*//*255*//*256*//*257*//*258*//*259*//*260*//*261*//*262*//*263*//*264*//*265*//*266*//*267*//*268*//*269*//*270*//*271*//*272*//*273*//*274*//*275*//*276*//*277*//*278*//*279*//*280*//*281*//*282*//*283*//*284*//*285*//*286*//*287*//*288*//*289*//*290*//*291*//*292*//*293*//*294*//*295*//*296*//*297*//*298*//*299*//*300*//*301*//*302*//*303*//*304*//*305*//*306*//*307*//*308*//*309*//*310*//*311*//*312*//*313*//*314*//*315*//*316*//*317*//*318*//*319*//*320*//*321*//*322*//*323*//*324*//*325*//*326*//*327*//*328*//*329*//*330*//*331*//*332*//*333*//*334*//*335*//*336*//*337*//*338*//*339*//*340*//*341*//*342*//*343*//*344*//*345*//*346*//*347*//*348*//*349*//*350*//*351*//*352*//*353*//*354*//*355*//*356*//*357*//*358*//*359*//*360*//*361*//*362*//*363*//*364*//*365*//*366*//*367*//*368*//*369*//*370*//*371*//*372*//*373*//*374*//*375*//*376*//*377*//*378*//*379*//*380*//*381*//*382*//*383*//*384*//*385*//*386*//*387*//*388*//*389*//*390*//*391*//*392*/#line 313 "/Engine/Public/Platform.ush"/*393*//*394*//*395*//*396*//*397*//*398*//*399*//*400*//*401*//*402*//*403*//*404*//*405*//*406*//*407*//*408*//*409*//*410*//*411*//*412*//*413*//*414*//*415*//*416*//*417*//*418*//*419*//*420*//*421*//*422*//*423*//*424*//*425*//*426*//*427*//*428*//*429*//*430*//*431*//*432*//*433*//*434*//*435*//*436*//*437*//*438*//*439*//*440*//*441*//*442*//*443*//*444*//*445*//*446*//*447*//*448*//*449*//*450*//*451*//*452*//*453*//*454*//*455*//*456*//*457*//*458*//*459*//*460*/#line 455 "/Engine/Public/Platform.ush"/*461*//*462*//*463*//*464*//*465*//*466*//*467*//*468*//*469*//*470*//*471*//*472*//*473*//*474*//*475*//*476*//*477*//*478*//*479*//*480*//*481*//*482*//*483*//*484*//*485*//*486*//*487*//*488*//*489*//*490*//*491*//*492*//*493*//*494*//*495*//*496*//*497*//*498*//*499*//*500*//*501*//*502*//*503*//*504*//*505*//*506*//*507*//*508*//*509*//*510*//*511*//*512*//*513*//*514*//*515*//*516*//*517*//*518*//*519*//*520*//*521*//*522*//*523*//*524*//*525*//*526*//*527*//*528*//*529*//*530*//*531*//*532*//*533*//*534*//*535*//*536*//*537*//*538*//*539*//*540*//*541*//*542*//*543*//*544*//*545*//*546*//*547*//*548*//*549*//*550*//*551*//*552*//*553*//*554*//*555*//*556*//*557*//*558*//*559*//*560*//*561*//*562*//*563*//*564*//*565*//*566*//*567*//*568*//*569*//*570*//*571*//*572*//*573*//*574*//*575*//*576*//*577*//*578*//*579*//*580*//*581*//*582*//*583*//*584*//*585*//*586*//*587*//*588*//*589*//*590*//*591*//*592*//*593*//*594*//*595*//*596*//*597*//*598*//*599*//*600*//*601*//*602*//*603*//*604*//*605*//*606*//*607*//*608*//*609*/#line 620 "/Engine/Public/Platform.ush"/*610*//*611*//*612*//*613*//*614*//*615*//*616*//*617*//*618*//*619*//*620*/#line 643 "/Engine/Public/Platform.ush"/*621*//*622*//*623*//*624*//*625*//*626*//*627*//*628*//*629*//*630*//*631*//*632*//*633*//*634*//*635*//*636*//*637*//*638*//*639*//*640*//*641*//*642*//*643*//*644*//*645*//*646*//*647*//*648*//*649*//*650*//*651*//*652*//*653*//*654*//*655*//*656*//*657*//*658*//*659*//*660*//*661*//*662*//*663*//*664*//*665*//*666*//*667*//*668*//*669*//*670*//*671*//*672*//*673*//*674*//*675*//*676*//*677*//*678*//*679*//*680*//*681*//*682*//*683*//*684*//*685*//*686*//*687*//*688*//*689*/void ShaderYield()/*690*/{/*691*//*692*/}/*693*//*694*//*695*//*696*//*697*//*698*//*699*//*700*//*701*//*702*//*703*//*704*//*705*//*706*//*707*//*708*//*709*//*710*//*711*//*712*//*713*//*714*//*715*//*716*//*717*//*718*//*719*//*720*//*721*/#line 761 "/Engine/Public/Platform.ush"/*722*//*723*//*724*//*725*//*726*//*727*//*728*//*729*//*730*//*731*//*732*//*733*//*734*//*735*//*736*//*737*//*738*//*739*//*740*//*741*//*742*//*743*//*744*//*745*//*746*//*747*//*748*//*749*//*750*//*751*//*752*//*753*//*754*//*755*//*756*//*757*//*758*//*759*/precise float MakePrecise(in precise float v) { precise float pv = v; return pv; }/*760*/precise float2 MakePrecise(in precise float2 v) { precise float2 pv = v; return pv; }/*761*/precise float3 MakePrecise(in precise float3 v) { precise float3 pv = v; return pv; }/*762*/precise float4 MakePrecise(in precise float4 v) { precise float4 pv = v; return pv; }/*763*//*764*//*765*//*766*//*767*//*768*//*769*//*770*//*771*//*772*//*773*//*774*//*775*//*776*//*777*//*778*//*779*//*780*//*781*//*782*//*783*//*784*//*785*//*786*//*787*//*788*//*789*//*790*//*791*//*792*//*793*//*794*//*795*//*796*//*797*//*798*//*799*//*800*//*801*//*802*//*803*//*804*//*805*//*806*//*807*//*808*//*809*//*810*//*811*//*812*//*813*//*814*//*815*//*816*//*817*//*818*//*819*//*820*//*821*//*822*//*823*//*824*//*825*//*826*//*827*//*828*//*829*//*830*//*831*//*832*//*833*//*834*//*835*//*836*//*837*//*838*//*839*//*840*//*841*//*842*//*843*//*844*//*845*//*846*//*847*//*848*//*849*//*850*//*851*//*852*//*853*//*854*//*855*//*856*//*857*//*858*//*859*//*860*//*861*//*862*//*863*//*864*//*865*//*866*//*867*//*868*//*869*//*870*//*871*//*872*//*873*//*874*//*875*//*876*//*877*//*878*//*879*//*880*//*881*//*882*//*883*//*884*//*885*//*886*//*887*//*888*//*889*//*890*//*891*//*892*//*893*//*894*//*895*//*896*//*897*//*898*//*899*//*900*//*901*//*902*//*903*//*904*//*905*//*906*//*907*//*908*//*909*//*910*//*911*//*912*//*913*//*914*//*915*//*916*//*917*//*918*//*919*//*920*//*921*//*922*//*923*//*924*//*925*//*926*//*927*//*928*//*929*//*930*//*931*//*932*//*933*//*934*//*935*//*936*//*937*//*938*//*939*//*940*//*941*//*942*//*943*//*944*//*945*//*946*//*947*//*948*//*949*//*950*//*951*//*952*//*953*/	void WriteDispatchIndirectArgs(RWBuffer<uint> RWIndirectDispatchArgsBuffer, in uint InIndex, in uint InIndirectArgX, in uint InIndirectArgY, in uint InIndirectArgZ)/*954*/	{/*955*/		RWIndirectDispatchArgsBuffer[3 * InIndex + 0] = InIndirectArgX;/*956*/		RWIndirectDispatchArgsBuffer[3 * InIndex + 1] = InIndirectArgY;/*957*/		RWIndirectDispatchArgsBuffer[3 * InIndex + 2] = InIndirectArgZ;/*958*/	}/*959*//*960*//*961*/void WriteDispatchIndirectArgs(RWBuffer<uint> RWIndirectDispatchArgsBuffer, in uint InIndex, in uint3 InIndirectArg)/*962*/{/*963*/	WriteDispatchIndirectArgs(RWIndirectDispatchArgsBuffer, InIndex, InIndirectArg.x, InIndirectArg.y, InIndirectArg.z);/*964*/}/*965*//*966*//*967*//*968*//*969*//*970*//*971*//*972*//*973*//*974*//*975*//*976*//*977*//*978*//*979*//*980*//*981*//*982*//*983*//*984*//*985*//*986*//*987*//*988*//*989*//*990*//*991*//*992*//*993*//*994*/float min3(float a, float b, float c)/*995*/{/*996*/	return min(a, min(b, c));/*997*/}/*998*//*999*/int min3(int a, int b, int c)/*1000*/{/*1001*/	return min(a, min(b, c));/*1002*/}/*1003*//*1004*/uint min3(uint a, uint b, uint c)/*1005*/{/*1006*/	return min(a, min(b, c));/*1007*/}/*1008*//*1009*/  float2 min3 ( float2 a, float2 b, float2 c) { return float2( min3 (a.x , b.x , c.x ), min3 (a.y , b.y , c.y )); } float3 min3 ( float3 a, float3 b, float3 c) { return float3( min3 (a.xy, b.xy, c.xy), min3 (a.z , b.z , c.z )); } float4 min3 ( float4 a, float4 b, float4 c) { return float4( min3 (a.xy, b.xy, c.xy), min3 (a.zw, b.zw, c.zw)); }/*1010*/  int2 min3 ( int2 a, int2 b, int2 c) { return int2( min3 (a.x , b.x , c.x ), min3 (a.y , b.y , c.y )); } int3 min3 ( int3 a, int3 b, int3 c) { return int3( min3 (a.xy, b.xy, c.xy), min3 (a.z , b.z , c.z )); } int4 min3 ( int4 a, int4 b, int4 c) { return int4( min3 (a.xy, b.xy, c.xy), min3 (a.zw, b.zw, c.zw)); }/*1011*/  uint2 min3 ( uint2 a, uint2 b, uint2 c) { return uint2( min3 (a.x , b.x , c.x ), min3 (a.y , b.y , c.y )); } uint3 min3 ( uint3 a, uint3 b, uint3 c) { return uint3( min3 (a.xy, b.xy, c.xy), min3 (a.z , b.z , c.z )); } uint4 min3 ( uint4 a, uint4 b, uint4 c) { return uint4( min3 (a.xy, b.xy, c.xy), min3 (a.zw, b.zw, c.zw)); }/*1012*//*1013*/float max3(float a, float b, float c)/*1014*/{/*1015*/	return max(a, max(b, c));/*1016*/}/*1017*//*1018*/int max3(int a, int b, int c)/*1019*/{/*1020*/	return max(a, max(b, c));/*1021*/}/*1022*//*1023*/uint max3(uint a, uint b, uint c)/*1024*/{/*1025*/	return max(a, max(b, c));/*1026*/}/*1027*//*1028*/  float2 max3 ( float2 a, float2 b, float2 c) { return float2( max3 (a.x , b.x , c.x ), max3 (a.y , b.y , c.y )); } float3 max3 ( float3 a, float3 b, float3 c) { return float3( max3 (a.xy, b.xy, c.xy), max3 (a.z , b.z , c.z )); } float4 max3 ( float4 a, float4 b, float4 c) { return float4( max3 (a.xy, b.xy, c.xy), max3 (a.zw, b.zw, c.zw)); }/*1029*/  int2 max3 ( int2 a, int2 b, int2 c) { return int2( max3 (a.x , b.x , c.x ), max3 (a.y , b.y , c.y )); } int3 max3 ( int3 a, int3 b, int3 c) { return int3( max3 (a.xy, b.xy, c.xy), max3 (a.z , b.z , c.z )); } int4 max3 ( int4 a, int4 b, int4 c) { return int4( max3 (a.xy, b.xy, c.xy), max3 (a.zw, b.zw, c.zw)); }/*1030*/  uint2 max3 ( uint2 a, uint2 b, uint2 c) { return uint2( max3 (a.x , b.x , c.x ), max3 (a.y , b.y , c.y )); } uint3 max3 ( uint3 a, uint3 b, uint3 c) { return uint3( max3 (a.xy, b.xy, c.xy), max3 (a.z , b.z , c.z )); } uint4 max3 ( uint4 a, uint4 b, uint4 c) { return uint4( max3 (a.xy, b.xy, c.xy), max3 (a.zw, b.zw, c.zw)); }/*1031*//*1032*/#line 1111 "/Engine/Public/Platform.ush"/*1033*//*1034*//*1035*//*1036*//*1037*//*1038*//*1039*//*1040*//*1041*/#line 1145 "/Engine/Public/Platform.ush"/*1042*//*1043*/  bool select_internal(bool    c, bool a, bool b) { return bool (c   ? a.x : b.x); } bool2 select_internal(bool    c, bool a, bool2 b) { return bool2(c   ? a   : b.x, c   ? a   : b.y); } bool2 select_internal(bool    c, bool2 a, bool b) { return bool2(c   ? a.x : b  , c   ? a.y : b  ); } bool2 select_internal(bool    c, bool2 a, bool2 b) { return bool2(c   ? a.x : b.x, c   ? a.y : b.y); } bool2 select_internal(bool2   c, bool a, bool b) { return bool2(c.x ? a   : b  , c.y ? a   : b  ); } bool2 select_internal(bool2   c, bool a, bool2 b) { return bool2(c.x ? a   : b.x, c.y ? a   : b.y); } bool2 select_internal(bool2   c, bool2 a, bool b) { return bool2(c.x ? a.x : b  , c.y ? a.y : b  ); } bool2 select_internal(bool2   c, bool2 a, bool2 b) { return bool2(c.x ? a.x : b.x, c.y ? a.y : b.y); } bool3 select_internal(bool    c, bool a, bool3 b) { return bool3(c   ? a   : b.x, c   ? a   : b.y, c   ? a   : b.z); } bool3 select_internal(bool    c, bool3 a, bool b) { return bool3(c   ? a.x : b  , c   ? a.y : b  , c   ? a.z : b  ); } bool3 select_internal(bool    c, bool3 a, bool3 b) { return bool3(c   ? a.x : b.x, c   ? a.y : b.y, c   ? a.z : b.z); } bool3 select_internal(bool3   c, bool a, bool b) { return bool3(c.x ? a   : b  , c.y ? a   : b  , c.z ? a   : b  ); } bool3 select_internal(bool3   c, bool a, bool3 b) { return bool3(c.x ? a   : b.x, c.y ? a   : b.y, c.z ? a   : b.z); } bool3 select_internal(bool3   c, bool3 a, bool b) { return bool3(c.x ? a.x : b  , c.y ? a.y : b  , c.z ? a.z : b  ); } bool3 select_internal(bool3   c, bool3 a, bool3 b) { return bool3(c.x ? a.x : b.x, c.y ? a.y : b.y, c.z ? a.z : b.z); } bool4 select_internal(bool    c, bool a, bool4 b) { return bool4(c   ? a   : b.x, c   ? a   : b.y, c   ? a   : b.z, c   ? a   : b.w); } bool4 select_internal(bool    c, bool4 a, bool b) { return bool4(c   ? a.x : b  , c   ? a.y : b  , c   ? a.z : b  , c   ? a.w : b  ); } bool4 select_internal(bool    c, bool4 a, bool4 b) { return bool4(c   ? a.x : b.x, c   ? a.y : b.y, c   ? a.z : b.z, c   ? a.w : b.w); } bool4 select_internal(bool4   c, bool a, bool b) { return bool4(c.x ? a   : b  , c.y ? a   : b  , c.z ? a   : b  , c.w ? a   : b  ); } bool4 select_internal(bool4   c, bool a, bool4 b) { return bool4(c.x ? a   : b.x, c.y ? a   : b.y, c.z ? a   : b.z, c.w ? a   : b.w); } bool4 select_internal(bool4   c, bool4 a, bool b) { return bool4(c.x ? a.x : b  , c.y ? a.y : b  , c.z ? a.z : b  , c.w ? a.w : b  ); } bool4 select_internal(bool4   c, bool4 a, bool4 b) { return bool4(c.x ? a.x : b.x, c.y ? a.y : b.y, c.z ? a.z : b.z, c.w ? a.w : b.w); } /*1044*//*1045*//*1046*//*1047*//*1048*/  int select_internal(bool    c, int a, int b) { return int (c   ? a.x : b.x); } int2 select_internal(bool    c, int a, int2 b) { return int2(c   ? a   : b.x, c   ? a   : b.y); } int2 select_internal(bool    c, int2 a, int b) { return int2(c   ? a.x : b  , c   ? a.y : b  ); } int2 select_internal(bool    c, int2 a, int2 b) { return int2(c   ? a.x : b.x, c   ? a.y : b.y); } int2 select_internal(bool2   c, int a, int b) { return int2(c.x ? a   : b  , c.y ? a   : b  ); } int2 select_internal(bool2   c, int a, int2 b) { return int2(c.x ? a   : b.x, c.y ? a   : b.y); } int2 select_internal(bool2   c, int2 a, int b) { return int2(c.x ? a.x : b  , c.y ? a.y : b  ); } int2 select_internal(bool2   c, int2 a, int2 b) { return int2(c.x ? a.x : b.x, c.y ? a.y : b.y); } int3 select_internal(bool    c, int a, int3 b) { return int3(c   ? a   : b.x, c   ? a   : b.y, c   ? a   : b.z); } int3 select_internal(bool    c, int3 a, int b) { return int3(c   ? a.x : b  , c   ? a.y : b  , c   ? a.z : b  ); } int3 select_internal(bool    c, int3 a, int3 b) { return int3(c   ? a.x : b.x, c   ? a.y : b.y, c   ? a.z : b.z); } int3 select_internal(bool3   c, int a, int b) { return int3(c.x ? a   : b  , c.y ? a   : b  , c.z ? a   : b  ); } int3 select_internal(bool3   c, int a, int3 b) { return int3(c.x ? a   : b.x, c.y ? a   : b.y, c.z ? a   : b.z); } int3 select_internal(bool3   c, int3 a, int b) { return int3(c.x ? a.x : b  , c.y ? a.y : b  , c.z ? a.z : b  ); } int3 select_internal(bool3   c, int3 a, int3 b) { return int3(c.x ? a.x : b.x, c.y ? a.y : b.y, c.z ? a.z : b.z); } int4 select_internal(bool    c, int a, int4 b) { return int4(c   ? a   : b.x, c   ? a   : b.y, c   ? a   : b.z, c   ? a   : b.w); } int4 select_internal(bool    c, int4 a, int b) { return int4(c   ? a.x : b  , c   ? a.y : b  , c   ? a.z : b  , c   ? a.w : b  ); } int4 select_internal(bool    c, int4 a, int4 b) { return int4(c   ? a.x : b.x, c   ? a.y : b.y, c   ? a.z : b.z, c   ? a.w : b.w); } int4 select_internal(bool4   c, int a, int b) { return int4(c.x ? a   : b  , c.y ? a   : b  , c.z ? a   : b  , c.w ? a   : b  ); } int4 select_internal(bool4   c, int a, int4 b) { return int4(c.x ? a   : b.x, c.y ? a   : b.y, c.z ? a   : b.z, c.w ? a   : b.w); } int4 select_internal(bool4   c, int4 a, int b) { return int4(c.x ? a.x : b  , c.y ? a.y : b  , c.z ? a.z : b  , c.w ? a.w : b  ); } int4 select_internal(bool4   c, int4 a, int4 b) { return int4(c.x ? a.x : b.x, c.y ? a.y : b.y, c.z ? a.z : b.z, c.w ? a.w : b.w); } /*1049*/  float select_internal(bool    c, float a, float b) { return float (c   ? a.x : b.x); } float2 select_internal(bool    c, float a, float2 b) { return float2(c   ? a   : b.x, c   ? a   : b.y); } float2 select_internal(bool    c, float2 a, float b) { return float2(c   ? a.x : b  , c   ? a.y : b  ); } float2 select_internal(bool    c, float2 a, float2 b) { return float2(c   ? a.x : b.x, c   ? a.y : b.y); } float2 select_internal(bool2   c, float a, float b) { return float2(c.x ? a   : b  , c.y ? a   : b  ); } float2 select_internal(bool2   c, float a, float2 b) { return float2(c.x ? a   : b.x, c.y ? a   : b.y); } float2 select_internal(bool2   c, float2 a, float b) { return float2(c.x ? a.x : b  , c.y ? a.y : b  ); } float2 select_internal(bool2   c, float2 a, float2 b) { return float2(c.x ? a.x : b.x, c.y ? a.y : b.y); } float3 select_internal(bool    c, float a, float3 b) { return float3(c   ? a   : b.x, c   ? a   : b.y, c   ? a   : b.z); } float3 select_internal(bool    c, float3 a, float b) { return float3(c   ? a.x : b  , c   ? a.y : b  , c   ? a.z : b  ); } float3 select_internal(bool    c, float3 a, float3 b) { return float3(c   ? a.x : b.x, c   ? a.y : b.y, c   ? a.z : b.z); } float3 select_internal(bool3   c, float a, float b) { return float3(c.x ? a   : b  , c.y ? a   : b  , c.z ? a   : b  ); } float3 select_internal(bool3   c, float a, float3 b) { return float3(c.x ? a   : b.x, c.y ? a   : b.y, c.z ? a   : b.z); } float3 select_internal(bool3   c, float3 a, float b) { return float3(c.x ? a.x : b  , c.y ? a.y : b  , c.z ? a.z : b  ); } float3 select_internal(bool3   c, float3 a, float3 b) { return float3(c.x ? a.x : b.x, c.y ? a.y : b.y, c.z ? a.z : b.z); } float4 select_internal(bool    c, float a, float4 b) { return float4(c   ? a   : b.x, c   ? a   : b.y, c   ? a   : b.z, c   ? a   : b.w); } float4 select_internal(bool    c, float4 a, float b) { return float4(c   ? a.x : b  , c   ? a.y : b  , c   ? a.z : b  , c   ? a.w : b  ); } float4 select_internal(bool    c, float4 a, float4 b) { return float4(c   ? a.x : b.x, c   ? a.y : b.y, c   ? a.z : b.z, c   ? a.w : b.w); } float4 select_internal(bool4   c, float a, float b) { return float4(c.x ? a   : b  , c.y ? a   : b  , c.z ? a   : b  , c.w ? a   : b  ); } float4 select_internal(bool4   c, float a, float4 b) { return float4(c.x ? a   : b.x, c.y ? a   : b.y, c.z ? a   : b.z, c.w ? a   : b.w); } float4 select_internal(bool4   c, float4 a, float b) { return float4(c.x ? a.x : b  , c.y ? a.y : b  , c.z ? a.z : b  , c.w ? a.w : b  ); } float4 select_internal(bool4   c, float4 a, float4 b) { return float4(c.x ? a.x : b.x, c.y ? a.y : b.y, c.z ? a.z : b.z, c.w ? a.w : b.w); } /*1050*//*1051*//*1052*//*1053*//*1054*//*1055*//*1056*//*1057*//*1058*//*1059*//*1060*//*1061*/bool  and_internal(bool  a, bool  b) { return bool(a && b); }/*1062*/bool2 and_internal(bool2 a, bool2 b) { return bool2(a.x && b.x, a.y && b.y); }/*1063*/bool3 and_internal(bool3 a, bool3 b) { return bool3(a.x && b.x, a.y && b.y, a.z && b.z); }/*1064*/bool4 and_internal(bool4 a, bool4 b) { return bool4(a.x && b.x, a.y && b.y, a.z && b.z, a.w && b.w); }/*1065*//*1066*/bool  or_internal(bool  a, bool  b) { return bool(a || b); }/*1067*/bool2 or_internal(bool2 a, bool2 b) { return bool2(a.x || b.x, a.y || b.y); }/*1068*/bool3 or_internal(bool3 a, bool3 b) { return bool3(a.x || b.x, a.y || b.y, a.z || b.z); }/*1069*/bool4 or_internal(bool4 a, bool4 b) { return bool4(a.x || b.x, a.y || b.y, a.z || b.z, a.w || b.w); }/*1070*//*1071*//*1072*//*1073*//*1074*/#line 1196 "/Engine/Public/Platform.ush"/*1075*//*1076*//*1077*//*1078*//*1079*/float  CondMask(bool Cond, float  Src0, float  Src1) { return Cond ? Src0 : Src1; }/*1080*/float2 CondMask(bool Cond, float2 Src0, float2 Src1) { return Cond ? Src0 : Src1; }/*1081*/float3 CondMask(bool Cond, float3 Src0, float3 Src1) { return Cond ? Src0 : Src1; }/*1082*/float4 CondMask(bool Cond, float4 Src0, float4 Src1) { return Cond ? Src0 : Src1; }/*1083*//*1084*/int  CondMask(bool Cond, int  Src0, int  Src1) { return Cond ? Src0 : Src1; }/*1085*/int2 CondMask(bool Cond, int2 Src0, int2 Src1) { return Cond ? Src0 : Src1; }/*1086*/int3 CondMask(bool Cond, int3 Src0, int3 Src1) { return Cond ? Src0 : Src1; }/*1087*/int4 CondMask(bool Cond, int4 Src0, int4 Src1) { return Cond ? Src0 : Src1; }/*1088*//*1089*/uint  CondMask(bool Cond, uint  Src0, uint  Src1) { return Cond ? Src0 : Src1; }/*1090*/uint2 CondMask(bool Cond, uint2 Src0, uint2 Src1) { return Cond ? Src0 : Src1; }/*1091*/uint3 CondMask(bool Cond, uint3 Src0, uint3 Src1) { return Cond ? Src0 : Src1; }/*1092*/uint4 CondMask(bool Cond, uint4 Src0, uint4 Src1) { return Cond ? Src0 : Src1; }/*1093*//*1094*//*1095*//*1096*//*1097*/float UnpackByte0(uint v) { return float(v & 0xff); }/*1098*/float UnpackByte1(uint v) { return float((v >> 8) & 0xff); }/*1099*/float UnpackByte2(uint v) { return float((v >> 16) & 0xff); }/*1100*/float UnpackByte3(uint v) { return float(v >> 24); }/*1101*//*1102*//*1103*//*1104*//*1105*//*1106*//*1107*//*1108*//*1109*//*1110*/uint BitFieldInsertU32(uint Mask, uint Preserve, uint Enable)/*1111*/{/*1112*/	return (Preserve & Mask) | (Enable & ~Mask);/*1113*/}/*1114*//*1115*/uint BitFieldExtractU32(uint Data, uint Size, uint Offset)/*1116*/{/*1117*//*1118*//*1119*/	Size &= 31;/*1120*/	Offset &= 31;/*1121*/	return (Data >> Offset) & ((1u << Size) - 1u);/*1122*/}/*1123*//*1124*/int BitFieldExtractI32(int Data, uint Size, uint Offset)/*1125*/{/*1126*/	Size &= 31u;/*1127*/	Offset &= 31u;/*1128*/	const uint Shift = (32u - Size) & 31u;/*1129*/	const int Value = (Data >> Offset) & int((1u << Size) - 1u);/*1130*/	return (Value << Shift) >> Shift;/*1131*/}/*1132*//*1133*/uint BitFieldMaskU32(uint MaskWidth, uint MaskLocation)/*1134*/{/*1135*/	MaskWidth &= 31u;/*1136*/	MaskLocation &= 31u;/*1137*//*1138*/	return ((1u << MaskWidth) - 1u) << MaskLocation;/*1139*/}/*1140*//*1141*//*1142*//*1143*//*1144*//*1145*/int MulI24(int I1, int I2)/*1146*/{/*1147*//*1148*/	return (I1 * I2);/*1149*/}/*1150*//*1151*/uint MulU24(uint U1, uint U2)/*1152*/{/*1153*//*1154*/	return U1 * U2;/*1155*/}/*1156*//*1157*/int MadI24(int I1, int I2, int I3)/*1158*/{/*1159*//*1160*/	return I1 * I2 + I3;/*1161*/}/*1162*//*1163*/uint MadU24(uint U1, uint U2, uint U3)/*1164*/{/*1165*//*1166*/	return U1 * U2 + U3;/*1167*/}/*1168*//*1169*//*1170*//*1171*/uint Padding(uint Value, uint Pow2)/*1172*/{/*1173*/	return (Value + Pow2 - 1u) & ~(Pow2 - 1u);/*1174*/}/*1175*//*1176*/uint CeilLog2(uint Value)/*1177*/{/*1178*/	return Value < 2u ? 0u : firstbithigh(Value - 1u) + 1u;/*1179*/}/*1180*//*1181*/float BitFieldExtractFloat(uint Bits, uint Count, uint Offset)/*1182*/{/*1183*/	return BitFieldExtractU32(Bits, Count, Offset) / (float)BitFieldMaskU32(Count, 0u);/*1184*/}/*1185*//*1186*//*1187*//*1188*/uint BitAlignU32(uint High, uint Low, uint Shift)/*1189*/{/*1190*/	Shift &= 31u;/*1191*//*1192*/	uint Result = Low >> Shift;/*1193*/	Result |= Shift > 0u ? (High << (32u - Shift)) : 0u;/*1194*/	return Result;/*1195*/}/*1196*//*1197*//*1198*//*1199*//*1200*/uint ByteAlignU32(uint High, uint Low, uint Shift)/*1201*/{/*1202*/	return BitAlignU32(High, Low, Shift * 8);/*1203*/}/*1204*//*1205*//*1206*//*1207*//*1208*//*1209*//*1210*//*1211*//*1212*//*1213*//*1214*//*1215*/uint2 PackUlongType(uint2 Value)/*1216*/{/*1217*/	return Value;/*1218*/}/*1219*//*1220*/uint2 UnpackUlongType(uint2 Value)/*1221*/{/*1222*/	return Value;/*1223*/}/*1224*//*1225*//*1226*//*1227*//*1228*/uint MaskedBitCount( uint2 Bits, uint Index )/*1229*/{/*1230*/	bool bLow = Index < 32;/*1231*//*1232*/	uint Mask = 1u << ( Index - ( bLow ? 0 : 32 ) );/*1233*/	Mask -= 1;/*1234*//*1235*/	uint Offset;/*1236*/	Offset  = countbits( Bits.x & ( bLow ? Mask : ~0u ) );/*1237*/	Offset += countbits( Bits.y & ( bLow ? 0 : Mask ) );/*1238*/	return Offset;/*1239*/}/*1240*//*1241*//*1242*//*1243*//*1244*//*1245*//*1246*//*1247*//*1248*//*1249*//*1250*//*1251*/#line 1404 "/Engine/Public/Platform.ush"/*1252*//*1253*//*1254*//*1255*//*1256*//*1257*//*1258*//*1259*//*1260*//*1261*//*1262*//*1263*//*1264*//*1265*//*1266*//*1267*//*1268*//*1269*//*1270*//*1271*//*1272*//*1273*//*1274*//*1275*//*1276*//*1277*//*1278*//*1279*//*1280*//*1281*//*1282*//*1283*//*1284*//*1285*//*1286*//*1287*//*1288*//*1289*//*1290*//*1291*//*1292*//*1293*//*1294*//*1295*//*1296*//*1297*//*1298*//*1299*//*1300*//*1301*//*1302*//*1303*//*1304*//*1305*//*1306*/#line   7 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"/*1307*//*1308*//*1309*/#line   7 "/Plugin/FX/Niagara/Private/NiagaraShaderVersion.ush"/*1310*//*1311*/#line   9 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"/*1312*//*1313*//*1314*//*1315*//*1316*//*1317*//*1318*//*1319*//*1320*//*1321*//*1322*//*1323*//*1324*//*1325*//*1326*//*1327*//*1328*//*1329*/	const static float PI = 3.1415926535897932f;/*1330*//*1331*/	const static float TWO_PI = 3.1415926535897932f*2.0f;/*1332*//*1333*/#line   7 "/Engine/Private/Definitions.usf"/*1334*//*1335*//*1336*//*1337*//*1338*//*1339*//*1340*//*1341*//*1342*//*1343*//*1344*//*1345*//*1346*//*1347*//*1348*//*1349*//*1350*//*1351*//*1352*//*1353*//*1354*//*1355*//*1356*//*1357*//*1358*//*1359*//*1360*//*1361*//*1362*//*1363*//*1364*//*1365*//*1366*//*1367*//*1368*//*1369*//*1370*//*1371*//*1372*//*1373*//*1374*//*1375*//*1376*//*1377*//*1378*//*1379*//*1380*//*1381*//*1382*//*1383*//*1384*//*1385*//*1386*//*1387*//*1388*//*1389*//*1390*//*1391*//*1392*//*1393*//*1394*//*1395*//*1396*//*1397*//*1398*//*1399*//*1400*//*1401*//*1402*//*1403*//*1404*//*1405*//*1406*//*1407*//*1408*//*1409*//*1410*//*1411*//*1412*//*1413*//*1414*//*1415*//*1416*//*1417*//*1418*//*1419*//*1420*//*1421*//*1422*//*1423*//*1424*//*1425*//*1426*//*1427*//*1428*//*1429*//*1430*//*1431*//*1432*//*1433*//*1434*//*1435*//*1436*//*1437*//*1438*//*1439*//*1440*//*1441*//*1442*//*1443*//*1444*//*1445*//*1446*//*1447*//*1448*//*1449*//*1450*//*1451*//*1452*//*1453*//*1454*//*1455*//*1456*//*1457*//*1458*//*1459*//*1460*//*1461*//*1462*//*1463*//*1464*//*1465*//*1466*//*1467*//*1468*//*1469*//*1470*//*1471*//*1472*//*1473*//*1474*//*1475*//*1476*//*1477*//*1478*//*1479*//*1480*//*1481*//*1482*//*1483*//*1484*//*1485*//*1486*//*1487*//*1488*//*1489*//*1490*//*1491*//*1492*//*1493*//*1494*//*1495*//*1496*//*1497*//*1498*//*1499*//*1500*//*1501*//*1502*//*1503*//*1504*//*1505*//*1506*//*1507*//*1508*//*1509*//*1510*//*1511*//*1512*//*1513*//*1514*//*1515*//*1516*//*1517*//*1518*//*1519*//*1520*//*1521*//*1522*//*1523*//*1524*//*1525*//*1526*//*1527*//*1528*//*1529*//*1530*//*1531*//*1532*//*1533*//*1534*//*1535*//*1536*//*1537*//*1538*//*1539*//*1540*//*1541*//*1542*//*1543*//*1544*//*1545*//*1546*//*1547*//*1548*//*1549*//*1550*//*1551*//*1552*//*1553*//*1554*//*1555*//*1556*//*1557*//*1558*//*1559*//*1560*//*1561*//*1562*//*1563*//*1564*//*1565*//*1566*//*1567*//*1568*//*1569*//*1570*//*1571*//*1572*//*1573*//*1574*//*1575*//*1576*//*1577*//*1578*//*1579*//*1580*//*1581*//*1582*//*1583*//*1584*//*1585*//*1586*//*1587*//*1588*//*1589*//*1590*//*1591*//*1592*//*1593*//*1594*//*1595*//*1596*//*1597*//*1598*//*1599*//*1600*//*1601*//*1602*//*1603*//*1604*//*1605*//*1606*//*1607*//*1608*//*1609*//*1610*//*1611*//*1612*//*1613*//*1614*//*1615*//*1616*//*1617*//*1618*//*1619*//*1620*//*1621*//*1622*//*1623*//*1624*//*1625*//*1626*//*1627*//*1628*//*1629*//*1630*//*1631*//*1632*//*1633*//*1634*//*1635*//*1636*//*1637*//*1638*//*1639*//*1640*//*1641*//*1642*//*1643*//*1644*//*1645*//*1646*//*1647*//*1648*//*1649*//*1650*//*1651*//*1652*//*1653*/#line  30 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"/*1654*//*1655*//*1656*//*1657*/float4 ModuloPrecise(float4 x, float4 y){ return x - y * trunc(x/y); }/*1658*/float3 ModuloPrecise(float3 x, float3 y){ return x - y * trunc(x/y); }/*1659*/float2 ModuloPrecise(float2 x, float2 y){ return x - y * trunc(x/y);}/*1660*/float ModuloPrecise(float x, float y){ return x - y * trunc(x/y); }/*1661*/int ModuloPrecise(int x, int y){ return x - y * (x/y); }/*1662*/int Modulo(int x, int y){  return x - y * (x/y);  }/*1663*//*1664*//*1665*//*1666*/float4 Reciprocal(float4 x){ return 1.0f/x;}/*1667*/float3 Reciprocal(float3 x){ return 1.0f/x; }/*1668*/float2 Reciprocal(float2 x){ return 1.0f/x;}/*1669*/float Reciprocal(float x){ return 1.0f/x; }/*1670*//*1671*//*1672*//*1673*/bool NiagaraAll(bool b) { return b; }/*1674*/bool NiagaraAny(bool b) { return b; }/*1675*//*1676*//*1677*//*1678*//*1679*//*1680*//*1681*//*1682*//*1683*//*1684*/bool NiagaraAll(bool2 b) { return b.x && b.y; }/*1685*/bool NiagaraAll(bool3 b) { return b.x && b.y && b.z; }/*1686*/bool NiagaraAll(bool4 b) { return b.x && b.y && b.z && b.w; }/*1687*/bool NiagaraAny(bool2 b) { return b.x || b.y; }/*1688*/bool NiagaraAny(bool3 b) { return b.x || b.y || b.z; }/*1689*/bool NiagaraAny(bool4 b) { return b.x || b.y || b.z || b.w; }/*1690*//*1691*//*1692*//*1693*//*1694*//*1695*//*1696*//*1697*//*1698*/#line 210 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"/*1699*//*1700*//*1701*//*1702*//*1703*//*1704*//*1705*//*1706*//*1707*//*1708*//*1709*//*1710*//*1711*//*1712*//*1713*//*1714*//*1715*//*1716*//*1717*//*1718*//*1719*//*1720*//*1721*//*1722*/float4 rand4(int Seed1, int Seed2, int Seed3, int Seed4)/*1723*/{/*1724*/	int4 v = int4(Seed4, Seed1, Seed2, Seed3) * 1664525 + 1013904223;/*1725*//*1726*/	v.x += v.y*v.w;/*1727*/	v.y += v.z*v.x;/*1728*/	v.z += v.x*v.y;/*1729*/	v.w += v.y*v.z;/*1730*/	v.x += v.y*v.w;/*1731*/	v.y += v.z*v.x;/*1732*/	v.z += v.x*v.y;/*1733*/	v.w += v.y*v.z;/*1734*//*1735*//*1736*//*1737*//*1738*//*1739*//*1740*/	return float4((v >> 8) & 0x00ffffff) / 16777216.0; /*1741*//*1742*/}/*1743*//*1744*//*1745*//*1746*//*1747*//*1748*//*1749*//*1750*/float3 rand3(int Seed1, int Seed2, int Seed3, int Seed4)/*1751*/{/*1752*/	int3 v = int3(Seed1, Seed2, Seed4 | (Seed3 << 16)) * 1664525 + 1013904223;/*1753*//*1754*/	v.x += v.y*v.z;/*1755*/	v.y += v.z*v.x;/*1756*/	v.z += v.x*v.y;/*1757*/	v.x += v.y*v.z;/*1758*/	v.y += v.z*v.x;/*1759*/	v.z += v.x*v.y;/*1760*//*1761*/	return float3((v >> 8) & 0x00ffffff) / 16777216.0; /*1762*/}/*1763*//*1764*//*1765*/static int RandomCounterDeterministic = 0;/*1766*//*1767*//*1768*/float rand(float x, int Seed1, int Seed2, int Seed3)/*1769*/{/*1770*/	RandomCounterDeterministic += 1;/*1771*/	return rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).x * x;/*1772*/}/*1773*//*1774*//*1775*/float2 rand(float2 x, int Seed1, int Seed2, int Seed3)/*1776*/{/*1777*/	RandomCounterDeterministic += 1;/*1778*/	return rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).xy * x;/*1779*/}/*1780*//*1781*//*1782*/float3 rand(float3 x, int Seed1, int Seed2, int Seed3)/*1783*/{/*1784*/	RandomCounterDeterministic += 1;/*1785*/	return rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).xyz * x;/*1786*/}/*1787*//*1788*//*1789*/float4 rand(float4 x, int Seed1, int Seed2, int Seed3) /*1790*/{/*1791*/	RandomCounterDeterministic += 1;/*1792*/	return rand4(Seed1, Seed2, Seed3, RandomCounterDeterministic).xyzw * x;/*1793*/}/*1794*//*1795*//*1796*/int rand(int x, int Seed1, int Seed2, int Seed3)/*1797*/{/*1798*//*1799*//*1800*/	RandomCounterDeterministic += 1;/*1801*/	return int(rand3(Seed1, Seed2, Seed3, RandomCounterDeterministic).x * (x+1));/*1802*/}/*1803*//*1804*//*1805*//*1806*//*1807*//*1808*/#line 360 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"/*1809*//*1810*//*1811*//*1812*/	float rand(float x); /*1813*//*1814*/	float2 rand(float2 x)/*1815*/	{/*1816*/		return float2(rand(x.x), rand(x.y));/*1817*/	}/*1818*//*1819*/	float3 rand(float3 x)/*1820*/	{/*1821*/		return float3(rand(x.x), rand(x.y), rand(x.z));/*1822*/	}/*1823*//*1824*/	float4 rand(float4 x) /*1825*/	{/*1826*/		return float4(rand(x.x), rand(x.y), rand(x.z), rand(x.w));/*1827*/	}/*1828*//*1829*/	int rand(int x); /*1830*//*1831*//*1832*//*1833*//*1834*/int hash_single(int a)/*1835*/{/*1836*/    int x = (a ^ 61) ^ (a >> 16);/*1837*/	x += x << 3;/*1838*/	x ^= x >> 4;/*1839*/	x *= 0x27d4eb2d;/*1840*/	x ^= x >> 15;/*1841*/	return x;/*1842*/}/*1843*//*1844*/int hash(int a, int b)/*1845*/{/*1846*/	return hash_single(a) ^ hash_single(b * 31);/*1847*/}/*1848*//*1849*/float hash_float(int a, int b)/*1850*/{/*1851*/	return (hash(a, b) & 0x00ffffff) / 16777216.0;/*1852*/}/*1853*//*1854*//*1855*/float hash_float(float a, int b)/*1856*/{/*1857*/	return (hash(a * 16777216.0, b) & 0x00ffffff) / 16777216.0;/*1858*/}/*1859*//*1860*//*1861*/float rand_float(float x)/*1862*/{/*1863*/	return rand(x.x);/*1864*/}/*1865*//*1866*/float2 rand_float(float2 x)/*1867*/{/*1868*/	return float2(rand_float(x.x), rand_float(x.y));/*1869*/}/*1870*//*1871*/float3 rand_float(float3 x)/*1872*/{/*1873*/	return float3(rand_float(x.x), rand_float(x.y), rand_float(x.z));/*1874*/}/*1875*//*1876*/float4 rand_float(float4 x) /*1877*/{/*1878*/	return float4(rand_float(x.x), rand_float(x.y), rand_float(x.z), rand_float(x.w));/*1879*/}/*1880*//*1881*/int rand_int(int x)/*1882*/{/*1883*//*1884*//*1885*//*1886*/	return (int) rand_float(x.x);/*1887*/}/*1888*//*1889*//*1890*/float rand_float(float x, int Seed1, int Seed2, int Seed3)/*1891*/{/*1892*/	return rand(x.x, Seed1, Seed2, Seed3);/*1893*/}/*1894*//*1895*/float2 rand_float(float2 x, int Seed1, int Seed2, int Seed3)/*1896*/{/*1897*/	return rand(x, Seed1, Seed2, Seed3);/*1898*/}/*1899*//*1900*/float3 rand_float(float3 x, int Seed1, int Seed2, int Seed3)/*1901*/{/*1902*/	return rand(x, Seed1, Seed2, Seed3);/*1903*/}/*1904*//*1905*/float4 rand_float(float4 x, int Seed1, int Seed2, int Seed3) /*1906*/{/*1907*/	return rand(x, Seed1, Seed2, Seed3);/*1908*/}/*1909*//*1910*/int rand_int(int x, int Seed1, int Seed2, int Seed3)/*1911*/{/*1912*//*1913*//*1914*/	return rand(x.x-1, Seed1, Seed2, Seed3);/*1915*/}/*1916*//*1917*//*1918*/float4 NiagaraQuatSLerp(float4 Quat1, float4 Quat2, float Slerp)/*1919*/{/*1920*/	const float RawCosom = dot(Quat1, Quat2);/*1921*/	const float Cosom = abs(RawCosom);/*1922*//*1923*/	float Scale0, Scale1;/*1924*/	if (Cosom < 0.9999f)/*1925*/	{/*1926*/		const float Omega = acos(Cosom);/*1927*/		const float InvSin = 1.f / sin(Omega);/*1928*/		Scale0 = sin((1.f - Slerp) * Omega) * InvSin;/*1929*/		Scale1 = sin(Slerp * Omega) * InvSin;/*1930*/	}/*1931*/	else/*1932*/	{/*1933*/		Scale0 = 1.0f - Slerp;/*1934*/		Scale1 = Slerp;/*1935*/	}/*1936*//*1937*/	Scale1 = RawCosom >= 0.0f ? Scale1 : -Scale1;/*1938*//*1939*/	return (Scale0 * Quat1) + (Scale1 * Quat2);/*1940*/}/*1941*//*1942*//*1943*//*1944*//*1945*//*1946*//*1947*/	float noise(float x);/*1948*/	float noise(float2 x);/*1949*/	float noise(float3 x);/*1950*//*1951*//*1952*//*1953*/	float4 Modulo(float4 x, float4 y);/*1954*/	float3 Modulo(float3 x, float3 y);/*1955*/	float2 Modulo(float2 x, float2 y);/*1956*/	float Modulo(float x, float y);/*1957*//*1958*//*1959*/	int ExecIndex();/*1960*//*1961*//*1962*//*1963*/	int AcquireIndex(int DataSetID, bool DoAcquire);/*1964*//*1965*/	void AcquireID(int DataSetID, out int IDIndex, out int IDAcquireTag);/*1966*/	void UpdateID(int DataSetID, int IDIndex, int InstanceIndex);/*1967*//*1968*/	float InputDataFloat(int DataSetIndex, int RegisterIdx);  /*1969*/	int InputDataInt(int DataSetIndex, int RegisterIdx);/*1970*/	bool InputDataBool(int DataSetIndex, int RegisterIdx);/*1971*/	float InputDataHalf(int DataSetIndex, int RegisterIdx);/*1972*//*1973*/	float InputDataNoadvanceFloat(int DataSetIndex, int RegisterIdx);  /*1974*/	int InputDataNoadvanceInt(int DataSetIndex, int RegisterIdx);/*1975*/	bool InputDataNoadvanceBool(int DataSetIndex, int RegisterIdx);/*1976*//*1977*/	void OutputDataFloat(int DataSetIndex, int RegisterIndex, int InstanceIndex, float Value);/*1978*/	void OutputDataInt(int DataSetIndex, int RegisterIndex, int InstanceIndex, int Value);/*1979*/	void OutputDataBool(int DataSetIndex, int RegisterIndex, int InstanceIndex, bool Value);/*1980*/	void OutputDataHalf(int DataSetIndex, int RegisterIndex, int InstanceIndex, float Value);/*1981*//*1982*//*1983*//*1984*//*1985*//*1986*//*1987*//*1988*//*1989*//*1990*/#line 813 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"/*1991*//*1992*//*1993*//*1994*//*1995*//*1996*/	int OutputIndex(const int DataSetID, const bool bStageKillsParticles, const bool bIsValid)/*1997*/	{/*1998*//*1999*//*2000*//*2001*//*2002*//*2003*//*2004*//*2005*//*2006*//*2007*//*2008*//*2009*//*2010*/		return AcquireIndex(DataSetID, bIsValid);/*2011*/	}/*2012*//*2013*//*2014*//*2015*/struct NiagaraRandInfo/*2016*/{/*2017*/	int Seed1;/*2018*/	int Seed2;/*2019*/	int Seed3;/*2020*/};/*2021*//*2022*/#line 874 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"/*2023*//*2024*//*2025*//*2026*//*2027*/#line  25 "/Engine/Generated/NiagaraEmitterInstance.ush"/*2028*/struct NiagaraSpawnInfo/*2029*/{/*2030*/	int Count;/*2031*/	float InterpStartDt;/*2032*/	float IntervalDt;/*2033*/	int SpawnGroup;/*2034*/};/*2035*//*2036*/struct NiagaraEmitterID/*2037*/{/*2038*/	int ID;/*2039*/};/*2040*//*2041*/struct NiagaraID/*2042*/{/*2043*/	int Index;/*2044*/	int AcquireTag;/*2045*/};/*2046*//*2047*/cbuffer FNiagaraGlobalParameters/*2048*/{/*2049*/	float Engine_WorldDeltaTime;/*2050*/	float Engine_DeltaTime;/*2051*/	float Engine_InverseDeltaTime;/*2052*/	float Engine_Time;/*2053*/	float Engine_RealTime;/*2054*/	int Engine_QualityLevel;/*2055*/	int Engine_PaddingInt32_0;/*2056*/	int Engine_PaddingInt32_1;/*2057*/}/*2058*//*2059*/cbuffer FNiagaraSystemParameters/*2060*/{/*2061*/}/*2062*//*2063*/cbuffer FNiagaraOwnerParameters/*2064*/{/*2065*/}/*2066*//*2067*/cbuffer FNiagaraEmitterParameters/*2068*/{/*2069*/}/*2070*//*2071*/cbuffer FNiagaraExternalParameters/*2072*/{/*2073*/	int Emitter_RandomSeed;/*2074*/}/*2075*//*2076*/struct FParamMap0_User_Emitter/*2077*/{/*2078*/	int RandomSeed;/*2079*/};/*2080*//*2081*/struct FParamMap0_User/*2082*/{/*2083*/	bool driftsEnable;/*2084*/	float driftsSpawnRate;/*2085*/	FParamMap0_User_Emitter Emitter;/*2086*/	float spawnRate;/*2087*/};/*2088*//*2089*/struct FParamMap0_Transient/*2090*/{/*2091*/	bool FirstFrame;/*2092*/	int ScalabilityEmitterExecutionState;/*2093*/	float ScalabilityEmitterSpawnCountScale;/*2094*/	int ScalabilityExecutionState;/*2095*/	bool SpawningbCanEverSpawn;/*2096*/};/*2097*//*2098*/struct FParamMap0_SystemState/*2099*/{/*2100*/	float LoopDelay;/*2101*/	bool RecalculateDurationEachLoop;/*2102*/};/*2103*//*2104*/struct FParamMap0_System/*2105*/{/*2106*/	float Age;/*2107*/	bool bCompleteOnInactive;/*2108*/	float3 CameraLocation;/*2109*/	float3 CameraRotationSpeed;/*2110*/	float3 CameraSpeed;/*2111*/	float cameraSpeedFloat;/*2112*/	float3 CameraUp;/*2113*/	float3 CamForward;/*2114*/	float CurrentLoopDuration;/*2115*/	int ExecutionState;/*2116*/	int ExecutionStateSource;/*2117*/	int LoopCount;/*2118*/	float LoopedAge;/*2119*/	float NormalizedLoopAge;/*2120*/	int Num;/*2121*/};/*2122*//*2123*/struct FParamMap0_SpawnRate/*2124*/{/*2125*/	float SpawnProbability;/*2126*/	float SpawnRate;/*2127*/};/*2128*//*2129*/struct FParamMap0_SpawnBurst_Instantaneous/*2130*/{/*2131*/	float Age;/*2132*/	int SpawnCount;/*2133*/};/*2134*//*2135*/struct FParamMap0_Snow_01_SpawnRate/*2136*/{/*2137*/	NiagaraSpawnInfo SpawnOutputInfo;/*2138*/	float SpawnRemainder;/*2139*/};/*2140*//*2141*/struct FParamMap0_Snow_01_Scalability/*2142*/{/*2143*/	float DistanceFraction;/*2144*/};/*2145*//*2146*/struct FParamMap0_Snow_01/*2147*/{/*2148*/	float Age;/*2149*/	float CurrentLoopDuration;/*2150*/	float DistanceTraveled;/*2151*/	int ExecutionState;/*2152*/	int ExecutionStateSource;/*2153*/	int LoopCount;/*2154*/	float LoopedAge;/*2155*/	float NormalizedLoopAge;/*2156*/	FParamMap0_Snow_01_Scalability Scalability;/*2157*/	FParamMap0_Snow_01_SpawnRate SpawnRate;/*2158*/};/*2159*//*2160*/struct FParamMap0_OUTPUT_VAR_SpawnRate/*2161*/{/*2162*/	bool HasSpawnedThisFrame;/*2163*/};/*2164*//*2165*/struct FParamMap0_OUTPUT_VAR_SpawnBurst_Instantaneous/*2166*/{/*2167*/	bool HasSpawnedThisFrame;/*2168*/};/*2169*//*2170*/struct FParamMap0_OUTPUT_VAR/*2171*/{/*2172*/	FParamMap0_OUTPUT_VAR_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;/*2173*/	FParamMap0_OUTPUT_VAR_SpawnRate SpawnRate;/*2174*/};/*2175*//*2176*/struct FParamMap0_Local_SystemState/*2177*/{/*2178*/	bool LoopCountIncreased;/*2179*/};/*2180*//*2181*/struct FParamMap0_Local_SpawnRate/*2182*/{/*2183*/	float InterpStartDT;/*2184*/	float IntervalDT;/*2185*/	int SpawnCount;/*2186*/	float SpawnRate;/*2187*/};/*2188*//*2189*/struct FParamMap0_Local_SpawnBurst_Instantaneous/*2190*/{/*2191*/	bool CountNotEqualZero;/*2192*/	int SpawnCount;/*2193*/	bool SpawningIsValid;/*2194*/	float SpawnStartDT;/*2195*/};/*2196*//*2197*/struct FParamMap0_Local_EmitterState/*2198*/{/*2199*/	bool LoopCountIncreased;/*2200*/	float LoopDuration;/*2201*/	bool NoActiveEmitterParticles;/*2202*/	int PreviousEmitterState;/*2203*/};/*2204*//*2205*/struct FParamMap0_Local/*2206*/{/*2207*/	FParamMap0_Local_EmitterState EmitterState;/*2208*/	FParamMap0_Local_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;/*2209*/	FParamMap0_Local_SpawnRate SpawnRate;/*2210*/	FParamMap0_Local_SystemState SystemState;/*2211*/};/*2212*//*2213*/struct FParamMap0_Engine_System/*2214*/{/*2215*/	int RandomSeed;/*2216*/	int TickCount;/*2217*/};/*2218*//*2219*/struct FParamMap0_Engine_Snow_01/*2220*/{/*2221*/	NiagaraEmitterID ID;/*2222*/	int NumParticles;/*2223*/	float SpawnCountScale;/*2224*/};/*2225*//*2226*/struct FParamMap0_Engine_Owner/*2227*/{/*2228*/	int ExecutionState;/*2229*/	float LODDistanceFraction;/*2230*/	float3 Position;/*2231*/	float3 Velocity;/*2232*/};/*2233*//*2234*/struct FParamMap0_Engine_Emitter/*2235*/{/*2236*/	NiagaraEmitterID ID;/*2237*/	int InstanceSeed;/*2238*/	int TotalSpawnedParticles;/*2239*/};/*2240*//*2241*/struct FParamMap0_Engine_Drifts_01/*2242*/{/*2243*/	NiagaraEmitterID ID;/*2244*/	int NumParticles;/*2245*/	float SpawnCountScale;/*2246*/};/*2247*//*2248*/struct FParamMap0_Engine_CPU1/*2249*/{/*2250*/	NiagaraEmitterID ID;/*2251*/	int NumParticles;/*2252*/	float SpawnCountScale;/*2253*/};/*2254*//*2255*/struct FParamMap0_Engine/*2256*/{/*2257*/	FParamMap0_Engine_CPU1 CPU1;/*2258*/	float DeltaTime;/*2259*/	FParamMap0_Engine_Drifts_01 Drifts_01;/*2260*/	FParamMap0_Engine_Emitter Emitter;/*2261*/	int ExecIndex;/*2262*/	float InverseDeltaTime;/*2263*/	FParamMap0_Engine_Owner Owner;/*2264*/	int PaddingInt32_0;/*2265*/	int PaddingInt32_1;/*2266*/	int QualityLevel;/*2267*/	float RealTime;/*2268*/	FParamMap0_Engine_Snow_01 Snow_01;/*2269*/	FParamMap0_Engine_System System;/*2270*/	float Time;/*2271*/	float WorldDeltaTime;/*2272*/};/*2273*//*2274*/struct FParamMap0_enableDrifts/*2275*/{/*2276*/	bool driftsEnable;/*2277*/};/*2278*//*2279*/struct FParamMap0_EmitterState/*2280*/{/*2281*/	float LoopDelay;/*2282*/	bool RecalculateDurationEachLoop;/*2283*/};/*2284*//*2285*/struct FParamMap0_Emitter/*2286*/{/*2287*/	int RandomSeed;/*2288*/};/*2289*//*2290*/struct FParamMap0_Drifts_01_SpawnRate/*2291*/{/*2292*/	NiagaraSpawnInfo SpawnOutputInfo;/*2293*/	float SpawnRemainder;/*2294*/};/*2295*//*2296*/struct FParamMap0_Drifts_01_Scalability/*2297*/{/*2298*/	float DistanceFraction;/*2299*/};/*2300*//*2301*/struct FParamMap0_Drifts_01/*2302*/{/*2303*/	float Age;/*2304*/	float CurrentLoopDuration;/*2305*/	float DistanceTraveled;/*2306*/	int ExecutionState;/*2307*/	int ExecutionStateSource;/*2308*/	int LoopCount;/*2309*/	float LoopedAge;/*2310*/	float NormalizedLoopAge;/*2311*/	FParamMap0_Drifts_01_Scalability Scalability;/*2312*/	FParamMap0_Drifts_01_SpawnRate SpawnRate;/*2313*/};/*2314*//*2315*/struct FParamMap0_CPU1_SpawnBurst_Instantaneous/*2316*/{/*2317*/	NiagaraSpawnInfo SpawnBurst;/*2318*/};/*2319*//*2320*/struct FParamMap0_CPU1_Scalability/*2321*/{/*2322*/	float DistanceFraction;/*2323*/};/*2324*//*2325*/struct FParamMap0_CPU1/*2326*/{/*2327*/	float Age;/*2328*/	float CurrentLoopDuration;/*2329*/	float DistanceTraveled;/*2330*/	int ExecutionState;/*2331*/	int ExecutionStateSource;/*2332*/	int LoopCount;/*2333*/	float LoopedAge;/*2334*/	float NormalizedLoopAge;/*2335*/	FParamMap0_CPU1_Scalability Scalability;/*2336*/	FParamMap0_CPU1_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;/*2337*/};/*2338*//*2339*/struct FParamMap0/*2340*/{/*2341*/	FParamMap0_CPU1 CPU1;/*2342*/	FParamMap0_Drifts_01 Drifts_01;/*2343*/	FParamMap0_Emitter Emitter;/*2344*/	FParamMap0_EmitterState EmitterState;/*2345*/	FParamMap0_enableDrifts enableDrifts;/*2346*/	FParamMap0_Engine Engine;/*2347*/	FParamMap0_Local Local;/*2348*/	FParamMap0_OUTPUT_VAR OUTPUT_VAR;/*2349*/	FParamMap0_Snow_01 Snow_01;/*2350*/	FParamMap0_SpawnBurst_Instantaneous SpawnBurst_Instantaneous;/*2351*/	FParamMap0_SpawnRate SpawnRate;/*2352*/	FParamMap0_System System;/*2353*/	FParamMap0_SystemState SystemState;/*2354*/	FParamMap0_Transient Transient;/*2355*/	FParamMap0_User User;/*2356*/};/*2357*//*2358*/struct FSimulationContext/*2359*/{/*2360*/	FParamMap0 Map;/*2361*/};/*2362*//*2363*/static float HackSpawnInterp = 1.0;/*2364*/void GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQuery(int In_InstanceData, out float3 Out_CameraPositionWorld, out float3 Out_ForwardVectorWorld, out float3 Out_UpVectorWorld, out float3 Out_RightVectorWorld);/*2365*/void WF_CameraData_Func_(inout FSimulationContext Context);/*2366*/void SystemState_SystemChangeState002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2367*/void SystemState_SystemChangeState_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2368*/void SystemState_SystemChangeState001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2369*/void SystemState_Func_(inout FSimulationContext Context);/*2370*/void EmitterState_EmitterChangeState002_CPU1_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2371*/void EmitterState_EmitterChangeState005_CPU1_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2372*/void EmitterState_EmitterChangeState003_CPU1_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2373*/void EmitterState_CPU1_Func_(inout FSimulationContext Context);/*2374*/void SpawnBurst_Instantaneous_CPU1_Func_(inout FSimulationContext Context);/*2375*/void CPU1_8006B2684B22DA8FCD043CAEA87C3ECE_Func_(inout FSimulationContext Context);/*2376*/void EmitterState_EmitterChangeState002_Snow_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2377*/void EmitterState_EmitterChangeState_Snow_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2378*/void EmitterState_EmitterChangeState005_Snow_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2379*/void EmitterState_EmitterChangeState003_Snow_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2380*/void EmitterState_Snow_01_Func_(inout FSimulationContext Context);/*2381*/void SpawnRate_Snow_01_Func_(inout FSimulationContext Context);/*2382*/void Snow_01_477229A1454A78C1CBA52499AE073DCD_Func_(inout FSimulationContext Context);/*2383*/void EmitterState_EmitterChangeState002_Drifts_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2384*/void EmitterState_EmitterChangeState_Drifts_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2385*/void EmitterState_EmitterChangeState005_Drifts_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2386*/void EmitterState_EmitterChangeState003_Drifts_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context);/*2387*/void EmitterState_Drifts_01_Func_(inout FSimulationContext Context);/*2388*/void enableDrifts_Drifts_01_Func_(out float Out_Output, inout FSimulationContext Context);/*2389*/void GetRandomInfo_Emitter_Determinism_false_Emitter_Func_(int In_Seed, int In_Engine_System_TickCount, bool In_OverrideSeed, int In_Particles_UniqueID, int In_Emitter_RandomSeed, bool In_FixedOverrideSeed, int In_RandomnessMode, out NiagaraRandInfo Out_RandomInfo, out bool Out_UseDeterministicRandoms, inout FSimulationContext Context);/*2390*/void RandomRangeFloat_Func_(float In_Min, float In_Max, int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, out float Out_Result, inout FSimulationContext Context);/*2391*/void SpawnRate_Drifts_01_Func_(inout FSimulationContext Context);/*2392*/void Drifts_01_60697A784C6594879F9F9783C553EB85_Func_(inout FSimulationContext Context);/*2393*/float GetSpawnInterpolation();/*2394*/void WF_CameraData_Func_(inout FSimulationContext Context)/*2395*/{/*2396*/	float3 GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_CameraPositionWorld;/*2397*/	float3 GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_ForwardVectorWorld;/*2398*/	float3 GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_UpVectorWorld;/*2399*/	float3 GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_RightVectorWorld;/*2400*/	GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQuery(0, GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_CameraPositionWorld, GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_ForwardVectorWorld, GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_UpVectorWorld, GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_RightVectorWorld);/*2401*/	float3 Result = GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_CameraPositionWorld - Context.Map.System.CameraLocation;/*2402*/	float3 Result1 = Result / Context.Map.Engine.DeltaTime;/*2403*/	float3 Result2 = GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_ForwardVectorWorld - Context.Map.System.CamForward;/*2404*/	float3 Result3 = Result2 / Context.Map.Engine.DeltaTime;/*2405*/	Context.Map.System.CameraSpeed = Result1;/*2406*/	Context.Map.System.CameraRotationSpeed = Result3;/*2407*/	Context.Map.System.CameraLocation = GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_CameraPositionWorld;/*2408*/	Context.Map.System.CamForward = GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_ForwardVectorWorld;/*2409*/	Context.Map.System.CameraUp = GetCameraPropertiesCPUASC47GPU_WF_CameraData_CameraQueryOutput_UpVectorWorld;/*2410*/	Context.Map.System.cameraSpeedFloat = Result1;/*2411*/}/*2412*//*2413*/void SystemState_SystemChangeState002_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*2414*/{/*2415*/	bool Result16 = NiagaraAll(Context.Map.System.ExecutionStateSource <= In_NewStateSource);/*2416*/	bool Result17 = In_Condition && Result16;/*2417*/	int ENiagaraExecutionState_IfResult;/*2418*/	int ENiagaraExecutionStateSource_IfResult;/*2419*/	if(Result17)/*2420*/	{/*2421*/	ENiagaraExecutionState_IfResult = In_NewState;/*2422*/	ENiagaraExecutionStateSource_IfResult = In_NewStateSource;/*2423*/	}/*2424*/	else/*2425*/	{/*2426*/	ENiagaraExecutionState_IfResult = Context.Map.System.ExecutionState;/*2427*/	ENiagaraExecutionStateSource_IfResult = Context.Map.System.ExecutionStateSource;/*2428*/	}/*2429*/	Context.Map.System.ExecutionState = ENiagaraExecutionState_IfResult;/*2430*/	Context.Map.System.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult;/*2431*/}/*2432*//*2433*/void SystemState_SystemChangeState_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*2434*/{/*2435*/	bool Result18 = NiagaraAll(Context.Map.System.ExecutionStateSource <= In_NewStateSource);/*2436*/	bool Result19 = In_Condition && Result18;/*2437*/	int ENiagaraExecutionState_IfResult1;/*2438*/	int ENiagaraExecutionStateSource_IfResult1;/*2439*/	if(Result19)/*2440*/	{/*2441*/	ENiagaraExecutionState_IfResult1 = In_NewState;/*2442*/	ENiagaraExecutionStateSource_IfResult1 = In_NewStateSource;/*2443*/	}/*2444*/	else/*2445*/	{/*2446*/	ENiagaraExecutionState_IfResult1 = Context.Map.System.ExecutionState;/*2447*/	ENiagaraExecutionStateSource_IfResult1 = Context.Map.System.ExecutionStateSource;/*2448*/	}/*2449*/	Context.Map.System.ExecutionState = ENiagaraExecutionState_IfResult1;/*2450*/	Context.Map.System.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult1;/*2451*/}/*2452*//*2453*/void SystemState_SystemChangeState001_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*2454*/{/*2455*/	bool Result21 = NiagaraAll(Context.Map.System.ExecutionStateSource <= In_NewStateSource);/*2456*/	bool Result22 = In_Condition && Result21;/*2457*/	int ENiagaraExecutionState_IfResult2;/*2458*/	int ENiagaraExecutionStateSource_IfResult2;/*2459*/	if(Result22)/*2460*/	{/*2461*/	ENiagaraExecutionState_IfResult2 = In_NewState;/*2462*/	ENiagaraExecutionStateSource_IfResult2 = In_NewStateSource;/*2463*/	}/*2464*/	else/*2465*/	{/*2466*/	ENiagaraExecutionState_IfResult2 = Context.Map.System.ExecutionState;/*2467*/	ENiagaraExecutionStateSource_IfResult2 = Context.Map.System.ExecutionStateSource;/*2468*/	}/*2469*/	Context.Map.System.ExecutionState = ENiagaraExecutionState_IfResult2;/*2470*/	Context.Map.System.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult2;/*2471*/}/*2472*//*2473*/void SystemState_Func_(inout FSimulationContext Context)/*2474*/{/*2475*/	bool Result4 = NiagaraAll(Context.Map.System.Age <= Context.Map.Engine.DeltaTime);/*2476*/	Context.Map.Transient.FirstFrame = Result4;/*2477*/	float Constant4 = 0;/*2478*/	float Constant5 = 0;/*2479*/	bool Result5 = NiagaraAll(Context.Map.System.Age == Constant5);/*2480*/	float Constant6 = 5;/*2481*/	float Constant7 = 0.016667;/*2482*/	float Result6 = max(Constant6, Constant7);/*2483*/	float Duration_IfResult;/*2484*/	if(Result5)/*2485*/	{/*2486*/	Duration_IfResult = Result6;/*2487*/	}/*2488*/	else/*2489*/	{/*2490*/	Duration_IfResult = Context.Map.System.CurrentLoopDuration;/*2491*/	}/*2492*/	float Constant8 = 0;/*2493*/	Context.Map.System.CurrentLoopDuration = Duration_IfResult;/*2494*/	Context.Map.SystemState.LoopDelay = Constant8;/*2495*/	float Result7 = Context.Map.System.Age + Context.Map.Engine.DeltaTime;/*2496*/	float Result8 = Context.Map.Engine.DeltaTime + Context.Map.System.LoopedAge;/*2497*/	float Result9 = Result8 / Context.Map.System.CurrentLoopDuration;/*2498*/	int Count;/*2499*/	Count = Result9;/*2500*/	int Constant9 = 0;/*2501*/	int Result10 = max(Count, Constant9);/*2502*/	float Result11 = Result10 * Context.Map.System.CurrentLoopDuration;/*2503*/	float Result12 = Result8 - Result11;/*2504*/	int Constant10 = 0;/*2505*/	bool Result13 = NiagaraAll(Result10 > Constant10);/*2506*/	int Result14 = Result10 + Context.Map.System.LoopCount;/*2507*/	Context.Map.System.Age = Result7;/*2508*/	Context.Map.System.LoopedAge = Result12;/*2509*/	Context.Map.Local.SystemState.LoopCountIncreased = Result13;/*2510*/	Context.Map.System.LoopCount = Result14;/*2511*/	float Constant11 = 5;/*2512*/	float float_IfResult;/*2513*/	if(Context.Map.SystemState.RecalculateDurationEachLoop)/*2514*/	{/*2515*/	float_IfResult = Constant11;/*2516*/	}/*2517*/	else/*2518*/	{/*2519*/	float_IfResult = Context.Map.System.CurrentLoopDuration;/*2520*/	}/*2521*/	float CurrentLoopDuration_IfResult;/*2522*/	float LoopedAge_IfResult;/*2523*/	if(Context.Map.Local.SystemState.LoopCountIncreased)/*2524*/	{/*2525*/	CurrentLoopDuration_IfResult = float_IfResult;/*2526*/	LoopedAge_IfResult = Context.Map.System.LoopedAge;/*2527*/	}/*2528*/	else/*2529*/	{/*2530*/	CurrentLoopDuration_IfResult = Context.Map.System.CurrentLoopDuration;/*2531*/	LoopedAge_IfResult = Context.Map.System.LoopedAge;/*2532*/	}/*2533*/	Context.Map.System.CurrentLoopDuration = CurrentLoopDuration_IfResult;/*2534*/	Context.Map.System.LoopedAge = LoopedAge_IfResult;/*2535*/	float Result15 = Context.Map.System.LoopedAge / Context.Map.System.CurrentLoopDuration;/*2536*/	Context.Map.System.NormalizedLoopAge = Result15;/*2537*/	bool Constant12 = true;/*2538*/	int Constant13 = 0;/*2539*/	SystemState_SystemChangeState002_Func_(Context.Map.Transient.ScalabilityExecutionState, Constant12, Constant13, Context);/*2540*/	int Constant14 = 3;/*2541*/	bool Constant15 = false;/*2542*/	int Constant16 = 3;/*2543*/	SystemState_SystemChangeState_Func_(Constant14, Constant15, Constant16, Context);/*2544*/	bool Constant17 = true;/*2545*/	Context.Map.System.bCompleteOnInactive = Constant17;/*2546*/	int Constant18 = 0;/*2547*/	bool Result20 = NiagaraAny(Context.Map.Engine.Owner.ExecutionState != Constant18);/*2548*/	int Constant19 = 2;/*2549*/	SystemState_SystemChangeState001_Func_(Context.Map.Engine.Owner.ExecutionState, Result20, Constant19, Context);/*2550*/}/*2551*//*2552*/void EmitterState_EmitterChangeState002_CPU1_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*2553*/{/*2554*/	int Constant33 = 3;/*2555*/	bool Result38 = NiagaraAny(Context.Map.CPU1.ExecutionState != Constant33);/*2556*/	int Constant34 = 4;/*2557*/	bool Result39 = NiagaraAny(Context.Map.CPU1.ExecutionState != Constant34);/*2558*/	bool Result40 = Result38 && Result39;/*2559*/	bool Result41 = In_Condition && Result40;/*2560*/	bool Result42 = NiagaraAll(Context.Map.CPU1.ExecutionStateSource <= In_NewStateSource);/*2561*/	bool Result43 = Result41 && Result42;/*2562*/	int Constant35 = 2;/*2563*/	bool Result44 = NiagaraAll(In_NewState == Constant35);/*2564*/	int Constant36 = 1;/*2565*/	bool Result45 = NiagaraAll(Context.Map.CPU1.ExecutionState == Constant36);/*2566*/	int Constant37 = 2;/*2567*/	bool Result46 = NiagaraAll(Context.Map.CPU1.ExecutionState == Constant37);/*2568*/	bool Result47 = Result45 || Result46;/*2569*/	bool Result48 = Result44 && Result47;/*2570*/	int Constant38 = 1;/*2571*/	int Constant39 = (int)0;/*2572*/	int ENiagaraExecutionState_SelectResult = Constant39;/*2573*/	ENiagaraExecutionState_SelectResult = Constant38;/*2574*/	if(Result48 == 0)/*2575*/	{ /*2576*/	ENiagaraExecutionState_SelectResult = In_NewState;/*2577*/	}/*2578*/	int ENiagaraExecutionState_IfResult3;/*2579*/	int ENiagaraExecutionStateSource_IfResult3;/*2580*/	if(Result43)/*2581*/	{/*2582*/	ENiagaraExecutionState_IfResult3 = ENiagaraExecutionState_SelectResult;/*2583*/	ENiagaraExecutionStateSource_IfResult3 = In_NewStateSource;/*2584*/	}/*2585*/	else/*2586*/	{/*2587*/	ENiagaraExecutionState_IfResult3 = Context.Map.CPU1.ExecutionState;/*2588*/	ENiagaraExecutionStateSource_IfResult3 = Context.Map.CPU1.ExecutionStateSource;/*2589*/	}/*2590*/	Context.Map.CPU1.ExecutionState = ENiagaraExecutionState_IfResult3;/*2591*/	Context.Map.CPU1.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult3;/*2592*/}/*2593*//*2594*/void EmitterState_EmitterChangeState005_CPU1_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*2595*/{/*2596*/	int Constant44 = 3;/*2597*/	bool Result52 = NiagaraAny(Context.Map.CPU1.ExecutionState != Constant44);/*2598*/	int Constant45 = 4;/*2599*/	bool Result53 = NiagaraAny(Context.Map.CPU1.ExecutionState != Constant45);/*2600*/	bool Result54 = Result52 && Result53;/*2601*/	bool Result55 = In_Condition && Result54;/*2602*/	bool Result56 = NiagaraAll(Context.Map.CPU1.ExecutionStateSource <= In_NewStateSource);/*2603*/	bool Result57 = Result55 && Result56;/*2604*/	int Constant46 = 2;/*2605*/	bool Result58 = NiagaraAll(In_NewState == Constant46);/*2606*/	int Constant47 = 1;/*2607*/	bool Result59 = NiagaraAll(Context.Map.CPU1.ExecutionState == Constant47);/*2608*/	int Constant48 = 2;/*2609*/	bool Result60 = NiagaraAll(Context.Map.CPU1.ExecutionState == Constant48);/*2610*/	bool Result61 = Result59 || Result60;/*2611*/	bool Result62 = Result58 && Result61;/*2612*/	int Constant49 = 1;/*2613*/	int Constant50 = (int)0;/*2614*/	int ENiagaraExecutionState_SelectResult1 = Constant50;/*2615*/	ENiagaraExecutionState_SelectResult1 = Constant49;/*2616*/	if(Result62 == 0)/*2617*/	{ /*2618*/	ENiagaraExecutionState_SelectResult1 = In_NewState;/*2619*/	}/*2620*/	int ENiagaraExecutionState_IfResult4;/*2621*/	int ENiagaraExecutionStateSource_IfResult4;/*2622*/	if(Result57)/*2623*/	{/*2624*/	ENiagaraExecutionState_IfResult4 = ENiagaraExecutionState_SelectResult1;/*2625*/	ENiagaraExecutionStateSource_IfResult4 = In_NewStateSource;/*2626*/	}/*2627*/	else/*2628*/	{/*2629*/	ENiagaraExecutionState_IfResult4 = Context.Map.CPU1.ExecutionState;/*2630*/	ENiagaraExecutionStateSource_IfResult4 = Context.Map.CPU1.ExecutionStateSource;/*2631*/	}/*2632*/	Context.Map.CPU1.ExecutionState = ENiagaraExecutionState_IfResult4;/*2633*/	Context.Map.CPU1.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult4;/*2634*/}/*2635*//*2636*/void EmitterState_EmitterChangeState003_CPU1_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*2637*/{/*2638*/	int Constant55 = 3;/*2639*/	bool Result67 = NiagaraAny(Context.Map.CPU1.ExecutionState != Constant55);/*2640*/	int Constant56 = 4;/*2641*/	bool Result68 = NiagaraAny(Context.Map.CPU1.ExecutionState != Constant56);/*2642*/	bool Result69 = Result67 && Result68;/*2643*/	bool Result70 = In_Condition && Result69;/*2644*/	bool Result71 = NiagaraAll(Context.Map.CPU1.ExecutionStateSource <= In_NewStateSource);/*2645*/	bool Result72 = Result70 && Result71;/*2646*/	int Constant57 = 2;/*2647*/	bool Result73 = NiagaraAll(In_NewState == Constant57);/*2648*/	int Constant58 = 1;/*2649*/	bool Result74 = NiagaraAll(Context.Map.CPU1.ExecutionState == Constant58);/*2650*/	int Constant59 = 2;/*2651*/	bool Result75 = NiagaraAll(Context.Map.CPU1.ExecutionState == Constant59);/*2652*/	bool Result76 = Result74 || Result75;/*2653*/	bool Result77 = Result73 && Result76;/*2654*/	int Constant60 = 1;/*2655*/	int Constant61 = (int)0;/*2656*/	int ENiagaraExecutionState_SelectResult2 = Constant61;/*2657*/	ENiagaraExecutionState_SelectResult2 = Constant60;/*2658*/	if(Result77 == 0)/*2659*/	{ /*2660*/	ENiagaraExecutionState_SelectResult2 = In_NewState;/*2661*/	}/*2662*/	int ENiagaraExecutionState_IfResult5;/*2663*/	int ENiagaraExecutionStateSource_IfResult5;/*2664*/	if(Result72)/*2665*/	{/*2666*/	ENiagaraExecutionState_IfResult5 = ENiagaraExecutionState_SelectResult2;/*2667*/	ENiagaraExecutionStateSource_IfResult5 = In_NewStateSource;/*2668*/	}/*2669*/	else/*2670*/	{/*2671*/	ENiagaraExecutionState_IfResult5 = Context.Map.CPU1.ExecutionState;/*2672*/	ENiagaraExecutionStateSource_IfResult5 = Context.Map.CPU1.ExecutionStateSource;/*2673*/	}/*2674*/	Context.Map.CPU1.ExecutionState = ENiagaraExecutionState_IfResult5;/*2675*/	Context.Map.CPU1.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult5;/*2676*/}/*2677*//*2678*/void EmitterState_CPU1_Func_(inout FSimulationContext Context)/*2679*/{/*2680*/	bool Result23 = NiagaraAll(Context.Map.CPU1.Age <= Context.Map.Engine.DeltaTime);/*2681*/	Context.Map.Transient.FirstFrame = Result23;/*2682*/	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.CPU1.ExecutionState;/*2683*/	float Constant21 = 0.1;/*2684*/	float Constant22 = 0.016667;/*2685*/	float Result24 = max(Constant21, Constant22);/*2686*/	Context.Map.Local.EmitterState.LoopDuration = Result24;/*2687*/	float Constant23 = 0.1;/*2688*/	float Constant24 = 0;/*2689*/	bool Result25 = NiagaraAll(Context.Map.CPU1.Age == Constant24);/*2690*/	float Duration_IfResult1;/*2691*/	if(Result25)/*2692*/	{/*2693*/	Duration_IfResult1 = Context.Map.Local.EmitterState.LoopDuration;/*2694*/	}/*2695*/	else/*2696*/	{/*2697*/	Duration_IfResult1 = Context.Map.CPU1.CurrentLoopDuration;/*2698*/	}/*2699*/	float Constant25 = 0;/*2700*/	Context.Map.CPU1.CurrentLoopDuration = Duration_IfResult1;/*2701*/	Context.Map.EmitterState.LoopDelay = Constant25;/*2702*/	float Result26 = Context.Map.CPU1.Age + Context.Map.Engine.DeltaTime;/*2703*/	float Result27 = Context.Map.Engine.DeltaTime + Context.Map.CPU1.LoopedAge;/*2704*/	float Result28 = Result27 / Context.Map.CPU1.CurrentLoopDuration;/*2705*/	int Count1;/*2706*/	Count1 = Result28;/*2707*/	int Constant26 = 0;/*2708*/	int Result29 = max(Count1, Constant26);/*2709*/	float Result30 = Result29 * Context.Map.CPU1.CurrentLoopDuration;/*2710*/	float Result31 = Result27 - Result30;/*2711*/	int Constant27 = 0;/*2712*/	bool Result32 = NiagaraAll(Result29 > Constant27);/*2713*/	int Result33 = Result29 + Context.Map.CPU1.LoopCount;/*2714*/	Context.Map.CPU1.Age = Result26;/*2715*/	Context.Map.CPU1.LoopedAge = Result31;/*2716*/	Context.Map.Local.EmitterState.LoopCountIncreased = Result32;/*2717*/	Context.Map.CPU1.LoopCount = Result33;/*2718*/	float float_IfResult1;/*2719*/	if(Context.Map.EmitterState.RecalculateDurationEachLoop)/*2720*/	{/*2721*/	float_IfResult1 = Context.Map.Local.EmitterState.LoopDuration;/*2722*/	}/*2723*/	else/*2724*/	{/*2725*/	float_IfResult1 = Context.Map.CPU1.CurrentLoopDuration;/*2726*/	}/*2727*/	float CurrentLoopDuration_IfResult1;/*2728*/	float LoopedAge_IfResult1;/*2729*/	if(Context.Map.Local.EmitterState.LoopCountIncreased)/*2730*/	{/*2731*/	CurrentLoopDuration_IfResult1 = float_IfResult1;/*2732*/	LoopedAge_IfResult1 = Context.Map.CPU1.LoopedAge;/*2733*/	}/*2734*/	else/*2735*/	{/*2736*/	CurrentLoopDuration_IfResult1 = Context.Map.CPU1.CurrentLoopDuration;/*2737*/	LoopedAge_IfResult1 = Context.Map.CPU1.LoopedAge;/*2738*/	}/*2739*/	Context.Map.CPU1.CurrentLoopDuration = CurrentLoopDuration_IfResult1;/*2740*/	Context.Map.CPU1.LoopedAge = LoopedAge_IfResult1;/*2741*/	float Result34 = Context.Map.CPU1.LoopedAge / Context.Map.CPU1.CurrentLoopDuration;/*2742*/	Context.Map.CPU1.NormalizedLoopAge = Result34;/*2743*/	float Constant28 = 0;/*2744*/	float Constant29 = 1.0001;/*2745*/	float Result35 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant28,Constant29);/*2746*/	Context.Map.CPU1.Scalability.DistanceFraction = Result35;/*2747*/	int Constant30 = 0;/*2748*/	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant30;/*2749*/	int Constant31 = 0;/*2750*/	bool Result36 = NiagaraAll(Context.Map.Engine.CPU1.NumParticles == Constant31);/*2751*/	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result36;/*2752*/	int Constant32 = 0;/*2753*/	bool Result37 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant32);/*2754*/	EmitterState_EmitterChangeState002_CPU1_Func_(Context.Map.System.ExecutionState, Result37, Context.Map.System.ExecutionStateSource, Context);/*2755*/	int Constant40 = 1;/*2756*/	int Constant41 = 0;/*2757*/	bool Result49 = NiagaraAny(Context.Map.System.ExecutionState != Constant41);/*2758*/	int Constant42 = 2;/*2759*/	bool Result50 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant42);/*2760*/	bool Result51 = Result49 && Result50;/*2761*/	int Constant43 = 1;/*2762*/	EmitterState_EmitterChangeState005_CPU1_Func_(Constant40, Result51, Constant43, Context);/*2763*/	int Constant51 = 3;/*2764*/	int Constant52 = 0;/*2765*/	bool Result63 = NiagaraAny(Context.Map.CPU1.ExecutionState != Constant52);/*2766*/	int Constant53 = 0;/*2767*/	bool Result64 = NiagaraAny(Context.Map.CPU1.ExecutionStateSource != Constant53);/*2768*/	bool Result65 = Result63 && Result64;/*2769*/	bool Result66 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result65;/*2770*/	int Constant54 = 3;/*2771*/	EmitterState_EmitterChangeState003_CPU1_Func_(Constant51, Result66, Constant54, Context);/*2772*/	float3 Result78 = Context.Map.Engine.Owner.Velocity * Context.Map.Engine.DeltaTime;/*2773*/	float Result79 = length(Result78);/*2774*/	float Constant62 = 1e+08;/*2775*/	float Result80 = Modulo(Context.Map.CPU1.DistanceTraveled, Constant62);/*2776*/	float Result81 = Result79 + Result80;/*2777*/	Context.Map.CPU1.DistanceTraveled = Result81;/*2778*/}/*2779*//*2780*/void SpawnBurst_Instantaneous_CPU1_Func_(inout FSimulationContext Context)/*2781*/{/*2782*/	float Constant63 = 1;/*2783*/	Context.Map.Transient.ScalabilityEmitterSpawnCountScale = Constant63;/*2784*/	int Constant64 = 0;/*2785*/	bool Result82 = NiagaraAny(Context.Map.SpawnBurst_Instantaneous.SpawnCount != Constant64);/*2786*/	int Result83 = Context.Map.SpawnBurst_Instantaneous.SpawnCount * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.CPU1.SpawnCountScale;/*2787*/	int Constant65 = 1;/*2788*/	int Result84 = max(Result83, Constant65);/*2789*/	Context.Map.Local.SpawnBurst_Instantaneous.CountNotEqualZero = Result82;/*2790*/	Context.Map.Local.SpawnBurst_Instantaneous.SpawnCount = Result84;/*2791*/	float Constant66 = 0;/*2792*/	Context.Map.SpawnBurst_Instantaneous.Age = Context.Map.CPU1.LoopedAge;/*2793*/	float Constant67 = 1;/*2794*/	int Constant68 = 1;/*2795*/	float Result85 = Context.Map.SpawnBurst_Instantaneous.Age - Context.Map.Engine.DeltaTime;/*2796*/	float Result86 = Constant66 - Result85;/*2797*/	float Constant69 = 0;/*2798*/	float Output1;/*2799*/	Output1 = Constant69;/*2800*/	bool Result87 = NiagaraAll(Result86 >= Output1);/*2801*/	float Result88 = Constant66 - Context.Map.SpawnBurst_Instantaneous.Age;/*2802*/	bool Result89 = NiagaraAll(Result88 < Output1);/*2803*/	bool Result90 = Result87 && Result89;/*2804*/	Context.Map.Local.SpawnBurst_Instantaneous.SpawningIsValid = Result90;/*2805*/	Context.Map.Local.SpawnBurst_Instantaneous.SpawnStartDT = Result86;/*2806*/	int Constant70 = 0;/*2807*/	bool Result91 = Context.Map.Local.SpawnBurst_Instantaneous.CountNotEqualZero && Context.Map.Local.SpawnBurst_Instantaneous.SpawningIsValid;/*2808*/	int Constant71 = 0;/*2809*/	int Constant72 = (0);/*2810*/	int NiagaraInt32_SelectResult3 = Constant72;/*2811*/	NiagaraInt32_SelectResult3 = Context.Map.Local.SpawnBurst_Instantaneous.SpawnCount;/*2812*/	if(Result91 == 0)/*2813*/	{ /*2814*/	NiagaraInt32_SelectResult3 = Constant71;/*2815*/	}/*2816*/	float Constant73 = 0;/*2817*/	NiagaraSpawnInfo Output11;/*2818*/	Output11.Count = NiagaraInt32_SelectResult3;/*2819*/	Output11.InterpStartDt = Context.Map.Local.SpawnBurst_Instantaneous.SpawnStartDT;/*2820*/	Output11.IntervalDt = Constant73;/*2821*/	Output11.SpawnGroup = Constant70;/*2822*/	Context.Map.CPU1.SpawnBurst_Instantaneous.SpawnBurst = Output11;/*2823*/	Context.Map.OUTPUT_VAR.SpawnBurst_Instantaneous.HasSpawnedThisFrame = Result91;/*2824*/}/*2825*//*2826*/void CPU1_8006B2684B22DA8FCD043CAEA87C3ECE_Func_(inout FSimulationContext Context)/*2827*/{/*2828*/	bool Constant20 = false;/*2829*/	Context.Map.EmitterState.RecalculateDurationEachLoop = Constant20;/*2830*/	EnterStatScope(4 );/*2831*/	EmitterState_CPU1_Func_(Context);/*2832*/	ExitStatScope();/*2833*/	Context.Map.SpawnBurst_Instantaneous.SpawnCount = Context.Map.System.Num;/*2834*/	EnterStatScope(5 );/*2835*/	SpawnBurst_Instantaneous_CPU1_Func_(Context);/*2836*/	ExitStatScope();/*2837*/}/*2838*//*2839*/void EmitterState_EmitterChangeState002_Snow_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*2840*/{/*2841*/	int Constant88 = 3;/*2842*/	bool Result100 = NiagaraAny(Context.Map.Snow_01.ExecutionState != Constant88);/*2843*/	int Constant89 = 4;/*2844*/	bool Result101 = NiagaraAny(Context.Map.Snow_01.ExecutionState != Constant89);/*2845*/	bool Result102 = Result100 && Result101;/*2846*/	bool Result103 = In_Condition && Result102;/*2847*/	bool Result104 = NiagaraAll(Context.Map.Snow_01.ExecutionStateSource <= In_NewStateSource);/*2848*/	bool Result105 = Result103 && Result104;/*2849*/	int Constant90 = 2;/*2850*/	bool Result106 = NiagaraAll(In_NewState == Constant90);/*2851*/	int Constant91 = 1;/*2852*/	bool Result107 = NiagaraAll(Context.Map.Snow_01.ExecutionState == Constant91);/*2853*/	int Constant92 = 2;/*2854*/	bool Result108 = NiagaraAll(Context.Map.Snow_01.ExecutionState == Constant92);/*2855*/	bool Result109 = Result107 || Result108;/*2856*/	bool Result110 = Result106 && Result109;/*2857*/	int Constant93 = 1;/*2858*/	int Constant94 = (int)0;/*2859*/	int ENiagaraExecutionState_SelectResult4 = Constant94;/*2860*/	ENiagaraExecutionState_SelectResult4 = Constant93;/*2861*/	if(Result110 == 0)/*2862*/	{ /*2863*/	ENiagaraExecutionState_SelectResult4 = In_NewState;/*2864*/	}/*2865*/	int ENiagaraExecutionState_IfResult6;/*2866*/	int ENiagaraExecutionStateSource_IfResult6;/*2867*/	if(Result105)/*2868*/	{/*2869*/	ENiagaraExecutionState_IfResult6 = ENiagaraExecutionState_SelectResult4;/*2870*/	ENiagaraExecutionStateSource_IfResult6 = In_NewStateSource;/*2871*/	}/*2872*/	else/*2873*/	{/*2874*/	ENiagaraExecutionState_IfResult6 = Context.Map.Snow_01.ExecutionState;/*2875*/	ENiagaraExecutionStateSource_IfResult6 = Context.Map.Snow_01.ExecutionStateSource;/*2876*/	}/*2877*/	Context.Map.Snow_01.ExecutionState = ENiagaraExecutionState_IfResult6;/*2878*/	Context.Map.Snow_01.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult6;/*2879*/}/*2880*//*2881*/void EmitterState_EmitterChangeState_Snow_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*2882*/{/*2883*/	int Constant97 = 3;/*2884*/	bool Result111 = NiagaraAny(Context.Map.Snow_01.ExecutionState != Constant97);/*2885*/	int Constant98 = 4;/*2886*/	bool Result112 = NiagaraAny(Context.Map.Snow_01.ExecutionState != Constant98);/*2887*/	bool Result113 = Result111 && Result112;/*2888*/	bool Result114 = In_Condition && Result113;/*2889*/	bool Result115 = NiagaraAll(Context.Map.Snow_01.ExecutionStateSource <= In_NewStateSource);/*2890*/	bool Result116 = Result114 && Result115;/*2891*/	int Constant99 = 2;/*2892*/	bool Result117 = NiagaraAll(In_NewState == Constant99);/*2893*/	int Constant100 = 1;/*2894*/	bool Result118 = NiagaraAll(Context.Map.Snow_01.ExecutionState == Constant100);/*2895*/	int Constant101 = 2;/*2896*/	bool Result119 = NiagaraAll(Context.Map.Snow_01.ExecutionState == Constant101);/*2897*/	bool Result120 = Result118 || Result119;/*2898*/	bool Result121 = Result117 && Result120;/*2899*/	int Constant102 = 1;/*2900*/	int Constant103 = (int)0;/*2901*/	int ENiagaraExecutionState_SelectResult5 = Constant103;/*2902*/	ENiagaraExecutionState_SelectResult5 = Constant102;/*2903*/	if(Result121 == 0)/*2904*/	{ /*2905*/	ENiagaraExecutionState_SelectResult5 = In_NewState;/*2906*/	}/*2907*/	int ENiagaraExecutionState_IfResult7;/*2908*/	int ENiagaraExecutionStateSource_IfResult7;/*2909*/	if(Result116)/*2910*/	{/*2911*/	ENiagaraExecutionState_IfResult7 = ENiagaraExecutionState_SelectResult5;/*2912*/	ENiagaraExecutionStateSource_IfResult7 = In_NewStateSource;/*2913*/	}/*2914*/	else/*2915*/	{/*2916*/	ENiagaraExecutionState_IfResult7 = Context.Map.Snow_01.ExecutionState;/*2917*/	ENiagaraExecutionStateSource_IfResult7 = Context.Map.Snow_01.ExecutionStateSource;/*2918*/	}/*2919*/	Context.Map.Snow_01.ExecutionState = ENiagaraExecutionState_IfResult7;/*2920*/	Context.Map.Snow_01.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult7;/*2921*/}/*2922*//*2923*/void EmitterState_EmitterChangeState005_Snow_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*2924*/{/*2925*/	int Constant108 = 3;/*2926*/	bool Result125 = NiagaraAny(Context.Map.Snow_01.ExecutionState != Constant108);/*2927*/	int Constant109 = 4;/*2928*/	bool Result126 = NiagaraAny(Context.Map.Snow_01.ExecutionState != Constant109);/*2929*/	bool Result127 = Result125 && Result126;/*2930*/	bool Result128 = In_Condition && Result127;/*2931*/	bool Result129 = NiagaraAll(Context.Map.Snow_01.ExecutionStateSource <= In_NewStateSource);/*2932*/	bool Result130 = Result128 && Result129;/*2933*/	int Constant110 = 2;/*2934*/	bool Result131 = NiagaraAll(In_NewState == Constant110);/*2935*/	int Constant111 = 1;/*2936*/	bool Result132 = NiagaraAll(Context.Map.Snow_01.ExecutionState == Constant111);/*2937*/	int Constant112 = 2;/*2938*/	bool Result133 = NiagaraAll(Context.Map.Snow_01.ExecutionState == Constant112);/*2939*/	bool Result134 = Result132 || Result133;/*2940*/	bool Result135 = Result131 && Result134;/*2941*/	int Constant113 = 1;/*2942*/	int Constant114 = (int)0;/*2943*/	int ENiagaraExecutionState_SelectResult6 = Constant114;/*2944*/	ENiagaraExecutionState_SelectResult6 = Constant113;/*2945*/	if(Result135 == 0)/*2946*/	{ /*2947*/	ENiagaraExecutionState_SelectResult6 = In_NewState;/*2948*/	}/*2949*/	int ENiagaraExecutionState_IfResult8;/*2950*/	int ENiagaraExecutionStateSource_IfResult8;/*2951*/	if(Result130)/*2952*/	{/*2953*/	ENiagaraExecutionState_IfResult8 = ENiagaraExecutionState_SelectResult6;/*2954*/	ENiagaraExecutionStateSource_IfResult8 = In_NewStateSource;/*2955*/	}/*2956*/	else/*2957*/	{/*2958*/	ENiagaraExecutionState_IfResult8 = Context.Map.Snow_01.ExecutionState;/*2959*/	ENiagaraExecutionStateSource_IfResult8 = Context.Map.Snow_01.ExecutionStateSource;/*2960*/	}/*2961*/	Context.Map.Snow_01.ExecutionState = ENiagaraExecutionState_IfResult8;/*2962*/	Context.Map.Snow_01.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult8;/*2963*/}/*2964*//*2965*/void EmitterState_EmitterChangeState003_Snow_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*2966*/{/*2967*/	int Constant119 = 3;/*2968*/	bool Result140 = NiagaraAny(Context.Map.Snow_01.ExecutionState != Constant119);/*2969*/	int Constant120 = 4;/*2970*/	bool Result141 = NiagaraAny(Context.Map.Snow_01.ExecutionState != Constant120);/*2971*/	bool Result142 = Result140 && Result141;/*2972*/	bool Result143 = In_Condition && Result142;/*2973*/	bool Result144 = NiagaraAll(Context.Map.Snow_01.ExecutionStateSource <= In_NewStateSource);/*2974*/	bool Result145 = Result143 && Result144;/*2975*/	int Constant121 = 2;/*2976*/	bool Result146 = NiagaraAll(In_NewState == Constant121);/*2977*/	int Constant122 = 1;/*2978*/	bool Result147 = NiagaraAll(Context.Map.Snow_01.ExecutionState == Constant122);/*2979*/	int Constant123 = 2;/*2980*/	bool Result148 = NiagaraAll(Context.Map.Snow_01.ExecutionState == Constant123);/*2981*/	bool Result149 = Result147 || Result148;/*2982*/	bool Result150 = Result146 && Result149;/*2983*/	int Constant124 = 1;/*2984*/	int Constant125 = (int)0;/*2985*/	int ENiagaraExecutionState_SelectResult7 = Constant125;/*2986*/	ENiagaraExecutionState_SelectResult7 = Constant124;/*2987*/	if(Result150 == 0)/*2988*/	{ /*2989*/	ENiagaraExecutionState_SelectResult7 = In_NewState;/*2990*/	}/*2991*/	int ENiagaraExecutionState_IfResult9;/*2992*/	int ENiagaraExecutionStateSource_IfResult9;/*2993*/	if(Result145)/*2994*/	{/*2995*/	ENiagaraExecutionState_IfResult9 = ENiagaraExecutionState_SelectResult7;/*2996*/	ENiagaraExecutionStateSource_IfResult9 = In_NewStateSource;/*2997*/	}/*2998*/	else/*2999*/	{/*3000*/	ENiagaraExecutionState_IfResult9 = Context.Map.Snow_01.ExecutionState;/*3001*/	ENiagaraExecutionStateSource_IfResult9 = Context.Map.Snow_01.ExecutionStateSource;/*3002*/	}/*3003*/	Context.Map.Snow_01.ExecutionState = ENiagaraExecutionState_IfResult9;/*3004*/	Context.Map.Snow_01.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult9;/*3005*/}/*3006*//*3007*/void EmitterState_Snow_01_Func_(inout FSimulationContext Context)/*3008*/{/*3009*/	bool Result92 = NiagaraAll(Context.Map.Snow_01.Age <= Context.Map.Engine.DeltaTime);/*3010*/	Context.Map.Transient.FirstFrame = Result92;/*3011*/	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.Snow_01.ExecutionState;/*3012*/	float Constant74 = 65500;/*3013*/	Context.Map.Local.EmitterState.LoopDuration = Constant74;/*3014*/	float Constant75 = 0;/*3015*/	float Constant76 = 0;/*3016*/	bool Result93 = NiagaraAll(Context.Map.Snow_01.Age == Constant76);/*3017*/	float Duration_IfResult2;/*3018*/	if(Result93)/*3019*/	{/*3020*/	Duration_IfResult2 = Context.Map.Local.EmitterState.LoopDuration;/*3021*/	}/*3022*/	else/*3023*/	{/*3024*/	Duration_IfResult2 = Context.Map.Snow_01.CurrentLoopDuration;/*3025*/	}/*3026*/	float Constant77 = 0;/*3027*/	Context.Map.Snow_01.CurrentLoopDuration = Duration_IfResult2;/*3028*/	Context.Map.EmitterState.LoopDelay = Constant77;/*3029*/	float Result94 = Context.Map.Snow_01.Age + Context.Map.Engine.DeltaTime;/*3030*/	float Result95 = Context.Map.Engine.DeltaTime + Context.Map.Snow_01.LoopedAge;/*3031*/	bool Result96 = NiagaraAll(Result95 >= Context.Map.Snow_01.CurrentLoopDuration);/*3032*/	int Constant78 = 0;/*3033*/	Context.Map.Snow_01.Age = Result94;/*3034*/	Context.Map.Snow_01.LoopedAge = Result95;/*3035*/	Context.Map.Local.EmitterState.LoopCountIncreased = Result96;/*3036*/	Context.Map.Snow_01.LoopCount = Constant78;/*3037*/	bool Constant79 = false;/*3038*/	int Constant80 = 0;/*3039*/	Context.Map.Local.EmitterState.LoopCountIncreased = Constant79;/*3040*/	Context.Map.Snow_01.LoopCount = Constant80;/*3041*/	float Constant81 = 0;/*3042*/	float Duration_IfResult3;/*3043*/	float LoopedAge_IfResult2;/*3044*/	if(Context.Map.Local.EmitterState.LoopCountIncreased)/*3045*/	{/*3046*/	Duration_IfResult3 = Context.Map.Local.EmitterState.LoopDuration;/*3047*/	LoopedAge_IfResult2 = Constant81;/*3048*/	}/*3049*/	else/*3050*/	{/*3051*/	Duration_IfResult3 = Context.Map.Snow_01.CurrentLoopDuration;/*3052*/	LoopedAge_IfResult2 = Context.Map.Snow_01.LoopedAge;/*3053*/	}/*3054*/	Context.Map.Snow_01.CurrentLoopDuration = Duration_IfResult3;/*3055*/	Context.Map.Snow_01.LoopedAge = LoopedAge_IfResult2;/*3056*/	float Constant82 = 0;/*3057*/	Context.Map.Snow_01.NormalizedLoopAge = Constant82;/*3058*/	float Constant83 = 0;/*3059*/	float Constant84 = 1.0001;/*3060*/	float Result97 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant83,Constant84);/*3061*/	Context.Map.Snow_01.Scalability.DistanceFraction = Result97;/*3062*/	int Constant85 = 0;/*3063*/	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant85;/*3064*/	int Constant86 = 0;/*3065*/	bool Result98 = NiagaraAll(Context.Map.Engine.Snow_01.NumParticles == Constant86);/*3066*/	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result98;/*3067*/	int Constant87 = 0;/*3068*/	bool Result99 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant87);/*3069*/	EmitterState_EmitterChangeState002_Snow_01_Func_(Context.Map.System.ExecutionState, Result99, Context.Map.System.ExecutionStateSource, Context);/*3070*/	int Constant95 = 1;/*3071*/	int Constant96 = 1;/*3072*/	EmitterState_EmitterChangeState_Snow_01_Func_(Constant95, Context.Map.Local.EmitterState.LoopCountIncreased, Constant96, Context);/*3073*/	int Constant104 = 1;/*3074*/	int Constant105 = 0;/*3075*/	bool Result122 = NiagaraAny(Context.Map.System.ExecutionState != Constant105);/*3076*/	int Constant106 = 2;/*3077*/	bool Result123 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant106);/*3078*/	bool Result124 = Result122 && Result123;/*3079*/	int Constant107 = 1;/*3080*/	EmitterState_EmitterChangeState005_Snow_01_Func_(Constant104, Result124, Constant107, Context);/*3081*/	int Constant115 = 3;/*3082*/	int Constant116 = 0;/*3083*/	bool Result136 = NiagaraAny(Context.Map.Snow_01.ExecutionState != Constant116);/*3084*/	int Constant117 = 0;/*3085*/	bool Result137 = NiagaraAny(Context.Map.Snow_01.ExecutionStateSource != Constant117);/*3086*/	bool Result138 = Result136 && Result137;/*3087*/	bool Result139 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result138;/*3088*/	int Constant118 = 3;/*3089*/	EmitterState_EmitterChangeState003_Snow_01_Func_(Constant115, Result139, Constant118, Context);/*3090*/	float3 Result151 = Context.Map.Engine.Owner.Velocity * Context.Map.Engine.DeltaTime;/*3091*/	float Result152 = length(Result151);/*3092*/	float Constant126 = 1e+08;/*3093*/	float Result153 = Modulo(Context.Map.Snow_01.DistanceTraveled, Constant126);/*3094*/	float Result154 = Result152 + Result153;/*3095*/	Context.Map.Snow_01.DistanceTraveled = Result154;/*3096*/}/*3097*//*3098*/void SpawnRate_Snow_01_Func_(inout FSimulationContext Context)/*3099*/{/*3100*/	float Constant127 = 1;/*3101*/	Context.Map.Transient.ScalabilityEmitterSpawnCountScale = Constant127;/*3102*/	float Result155 = Context.Map.SpawnRate.SpawnRate * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.Snow_01.SpawnCountScale;/*3103*/	float Result156 = Reciprocal(Result155);/*3104*/	float Result157 = 1 - Context.Map.Snow_01.SpawnRate.SpawnRemainder;/*3105*/	float Result158 = Result156 * Result157;/*3106*/	Context.Map.Local.SpawnRate.SpawnRate = Result155;/*3107*/	Context.Map.Local.SpawnRate.IntervalDT = Result156;/*3108*/	Context.Map.Local.SpawnRate.InterpStartDT = Result158;/*3109*/	float Constant128 = 0;/*3110*/	bool Result159 = NiagaraAll(Context.Map.Snow_01.LoopedAge >= Constant128);/*3111*/	float Constant129 = 1;/*3112*/	float Constant130 = 0;/*3113*/	float float_IfResult2;/*3114*/	if(Result159)/*3115*/	{/*3116*/	float_IfResult2 = Constant129;/*3117*/	}/*3118*/	else/*3119*/	{/*3120*/	float_IfResult2 = Constant130;/*3121*/	}/*3122*/	float Result160 = Context.Map.Local.SpawnRate.SpawnRate * float_IfResult2;/*3123*/	float Result161 = Result160 * Context.Map.Engine.DeltaTime + Context.Map.Snow_01.SpawnRate.SpawnRemainder;/*3124*/	float Result162 = floor(Result161);/*3125*/	float Result163 = Result161 - Result162;/*3126*/	Context.Map.Local.SpawnRate.SpawnCount = Result162;/*3127*/	Context.Map.Snow_01.SpawnRate.SpawnRemainder = Result163;/*3128*/	int Constant131 = 0;/*3129*/	float Constant132 = 1;/*3130*/	NiagaraSpawnInfo Output12;/*3131*/	Output12.Count = Context.Map.Local.SpawnRate.SpawnCount;/*3132*/	Output12.InterpStartDt = Context.Map.Local.SpawnRate.InterpStartDT;/*3133*/	Output12.IntervalDt = Context.Map.Local.SpawnRate.IntervalDT;/*3134*/	Output12.SpawnGroup = Constant131;/*3135*/	bool Constant133 = true;/*3136*/	int Constant134 = 0;/*3137*/	bool Result164 = NiagaraAll(Context.Map.Local.SpawnRate.SpawnCount > Constant134);/*3138*/	Context.Map.Snow_01.SpawnRate.SpawnOutputInfo = Output12;/*3139*/	Context.Map.Transient.SpawningbCanEverSpawn = Constant133;/*3140*/	Context.Map.OUTPUT_VAR.SpawnRate.HasSpawnedThisFrame = Result164;/*3141*/}/*3142*//*3143*/void Snow_01_477229A1454A78C1CBA52499AE073DCD_Func_(inout FSimulationContext Context)/*3144*/{/*3145*/	EnterStatScope(7 );/*3146*/	EmitterState_Snow_01_Func_(Context);/*3147*/	ExitStatScope();/*3148*/	Context.Map.SpawnRate.SpawnRate = Context.Map.User.spawnRate;/*3149*/	EnterStatScope(8 );/*3150*/	SpawnRate_Snow_01_Func_(Context);/*3151*/	ExitStatScope();/*3152*/}/*3153*//*3154*/void EmitterState_EmitterChangeState002_Drifts_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*3155*/{/*3156*/	int Constant149 = 3;/*3157*/	bool Result173 = NiagaraAny(Context.Map.Drifts_01.ExecutionState != Constant149);/*3158*/	int Constant150 = 4;/*3159*/	bool Result174 = NiagaraAny(Context.Map.Drifts_01.ExecutionState != Constant150);/*3160*/	bool Result175 = Result173 && Result174;/*3161*/	bool Result176 = In_Condition && Result175;/*3162*/	bool Result177 = NiagaraAll(Context.Map.Drifts_01.ExecutionStateSource <= In_NewStateSource);/*3163*/	bool Result178 = Result176 && Result177;/*3164*/	int Constant151 = 2;/*3165*/	bool Result179 = NiagaraAll(In_NewState == Constant151);/*3166*/	int Constant152 = 1;/*3167*/	bool Result180 = NiagaraAll(Context.Map.Drifts_01.ExecutionState == Constant152);/*3168*/	int Constant153 = 2;/*3169*/	bool Result181 = NiagaraAll(Context.Map.Drifts_01.ExecutionState == Constant153);/*3170*/	bool Result182 = Result180 || Result181;/*3171*/	bool Result183 = Result179 && Result182;/*3172*/	int Constant154 = 1;/*3173*/	int Constant155 = (int)0;/*3174*/	int ENiagaraExecutionState_SelectResult8 = Constant155;/*3175*/	ENiagaraExecutionState_SelectResult8 = Constant154;/*3176*/	if(Result183 == 0)/*3177*/	{ /*3178*/	ENiagaraExecutionState_SelectResult8 = In_NewState;/*3179*/	}/*3180*/	int ENiagaraExecutionState_IfResult10;/*3181*/	int ENiagaraExecutionStateSource_IfResult10;/*3182*/	if(Result178)/*3183*/	{/*3184*/	ENiagaraExecutionState_IfResult10 = ENiagaraExecutionState_SelectResult8;/*3185*/	ENiagaraExecutionStateSource_IfResult10 = In_NewStateSource;/*3186*/	}/*3187*/	else/*3188*/	{/*3189*/	ENiagaraExecutionState_IfResult10 = Context.Map.Drifts_01.ExecutionState;/*3190*/	ENiagaraExecutionStateSource_IfResult10 = Context.Map.Drifts_01.ExecutionStateSource;/*3191*/	}/*3192*/	Context.Map.Drifts_01.ExecutionState = ENiagaraExecutionState_IfResult10;/*3193*/	Context.Map.Drifts_01.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult10;/*3194*/}/*3195*//*3196*/void EmitterState_EmitterChangeState_Drifts_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*3197*/{/*3198*/	int Constant158 = 3;/*3199*/	bool Result184 = NiagaraAny(Context.Map.Drifts_01.ExecutionState != Constant158);/*3200*/	int Constant159 = 4;/*3201*/	bool Result185 = NiagaraAny(Context.Map.Drifts_01.ExecutionState != Constant159);/*3202*/	bool Result186 = Result184 && Result185;/*3203*/	bool Result187 = In_Condition && Result186;/*3204*/	bool Result188 = NiagaraAll(Context.Map.Drifts_01.ExecutionStateSource <= In_NewStateSource);/*3205*/	bool Result189 = Result187 && Result188;/*3206*/	int Constant160 = 2;/*3207*/	bool Result190 = NiagaraAll(In_NewState == Constant160);/*3208*/	int Constant161 = 1;/*3209*/	bool Result191 = NiagaraAll(Context.Map.Drifts_01.ExecutionState == Constant161);/*3210*/	int Constant162 = 2;/*3211*/	bool Result192 = NiagaraAll(Context.Map.Drifts_01.ExecutionState == Constant162);/*3212*/	bool Result193 = Result191 || Result192;/*3213*/	bool Result194 = Result190 && Result193;/*3214*/	int Constant163 = 1;/*3215*/	int Constant164 = (int)0;/*3216*/	int ENiagaraExecutionState_SelectResult9 = Constant164;/*3217*/	ENiagaraExecutionState_SelectResult9 = Constant163;/*3218*/	if(Result194 == 0)/*3219*/	{ /*3220*/	ENiagaraExecutionState_SelectResult9 = In_NewState;/*3221*/	}/*3222*/	int ENiagaraExecutionState_IfResult11;/*3223*/	int ENiagaraExecutionStateSource_IfResult11;/*3224*/	if(Result189)/*3225*/	{/*3226*/	ENiagaraExecutionState_IfResult11 = ENiagaraExecutionState_SelectResult9;/*3227*/	ENiagaraExecutionStateSource_IfResult11 = In_NewStateSource;/*3228*/	}/*3229*/	else/*3230*/	{/*3231*/	ENiagaraExecutionState_IfResult11 = Context.Map.Drifts_01.ExecutionState;/*3232*/	ENiagaraExecutionStateSource_IfResult11 = Context.Map.Drifts_01.ExecutionStateSource;/*3233*/	}/*3234*/	Context.Map.Drifts_01.ExecutionState = ENiagaraExecutionState_IfResult11;/*3235*/	Context.Map.Drifts_01.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult11;/*3236*/}/*3237*//*3238*/void EmitterState_EmitterChangeState005_Drifts_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*3239*/{/*3240*/	int Constant169 = 3;/*3241*/	bool Result198 = NiagaraAny(Context.Map.Drifts_01.ExecutionState != Constant169);/*3242*/	int Constant170 = 4;/*3243*/	bool Result199 = NiagaraAny(Context.Map.Drifts_01.ExecutionState != Constant170);/*3244*/	bool Result200 = Result198 && Result199;/*3245*/	bool Result201 = In_Condition && Result200;/*3246*/	bool Result202 = NiagaraAll(Context.Map.Drifts_01.ExecutionStateSource <= In_NewStateSource);/*3247*/	bool Result203 = Result201 && Result202;/*3248*/	int Constant171 = 2;/*3249*/	bool Result204 = NiagaraAll(In_NewState == Constant171);/*3250*/	int Constant172 = 1;/*3251*/	bool Result205 = NiagaraAll(Context.Map.Drifts_01.ExecutionState == Constant172);/*3252*/	int Constant173 = 2;/*3253*/	bool Result206 = NiagaraAll(Context.Map.Drifts_01.ExecutionState == Constant173);/*3254*/	bool Result207 = Result205 || Result206;/*3255*/	bool Result208 = Result204 && Result207;/*3256*/	int Constant174 = 1;/*3257*/	int Constant175 = (int)0;/*3258*/	int ENiagaraExecutionState_SelectResult10 = Constant175;/*3259*/	ENiagaraExecutionState_SelectResult10 = Constant174;/*3260*/	if(Result208 == 0)/*3261*/	{ /*3262*/	ENiagaraExecutionState_SelectResult10 = In_NewState;/*3263*/	}/*3264*/	int ENiagaraExecutionState_IfResult12;/*3265*/	int ENiagaraExecutionStateSource_IfResult12;/*3266*/	if(Result203)/*3267*/	{/*3268*/	ENiagaraExecutionState_IfResult12 = ENiagaraExecutionState_SelectResult10;/*3269*/	ENiagaraExecutionStateSource_IfResult12 = In_NewStateSource;/*3270*/	}/*3271*/	else/*3272*/	{/*3273*/	ENiagaraExecutionState_IfResult12 = Context.Map.Drifts_01.ExecutionState;/*3274*/	ENiagaraExecutionStateSource_IfResult12 = Context.Map.Drifts_01.ExecutionStateSource;/*3275*/	}/*3276*/	Context.Map.Drifts_01.ExecutionState = ENiagaraExecutionState_IfResult12;/*3277*/	Context.Map.Drifts_01.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult12;/*3278*/}/*3279*//*3280*/void EmitterState_EmitterChangeState003_Drifts_01_Func_(int In_NewState, bool In_Condition, int In_NewStateSource, inout FSimulationContext Context)/*3281*/{/*3282*/	int Constant180 = 3;/*3283*/	bool Result213 = NiagaraAny(Context.Map.Drifts_01.ExecutionState != Constant180);/*3284*/	int Constant181 = 4;/*3285*/	bool Result214 = NiagaraAny(Context.Map.Drifts_01.ExecutionState != Constant181);/*3286*/	bool Result215 = Result213 && Result214;/*3287*/	bool Result216 = In_Condition && Result215;/*3288*/	bool Result217 = NiagaraAll(Context.Map.Drifts_01.ExecutionStateSource <= In_NewStateSource);/*3289*/	bool Result218 = Result216 && Result217;/*3290*/	int Constant182 = 2;/*3291*/	bool Result219 = NiagaraAll(In_NewState == Constant182);/*3292*/	int Constant183 = 1;/*3293*/	bool Result220 = NiagaraAll(Context.Map.Drifts_01.ExecutionState == Constant183);/*3294*/	int Constant184 = 2;/*3295*/	bool Result221 = NiagaraAll(Context.Map.Drifts_01.ExecutionState == Constant184);/*3296*/	bool Result222 = Result220 || Result221;/*3297*/	bool Result223 = Result219 && Result222;/*3298*/	int Constant185 = 1;/*3299*/	int Constant186 = (int)0;/*3300*/	int ENiagaraExecutionState_SelectResult11 = Constant186;/*3301*/	ENiagaraExecutionState_SelectResult11 = Constant185;/*3302*/	if(Result223 == 0)/*3303*/	{ /*3304*/	ENiagaraExecutionState_SelectResult11 = In_NewState;/*3305*/	}/*3306*/	int ENiagaraExecutionState_IfResult13;/*3307*/	int ENiagaraExecutionStateSource_IfResult13;/*3308*/	if(Result218)/*3309*/	{/*3310*/	ENiagaraExecutionState_IfResult13 = ENiagaraExecutionState_SelectResult11;/*3311*/	ENiagaraExecutionStateSource_IfResult13 = In_NewStateSource;/*3312*/	}/*3313*/	else/*3314*/	{/*3315*/	ENiagaraExecutionState_IfResult13 = Context.Map.Drifts_01.ExecutionState;/*3316*/	ENiagaraExecutionStateSource_IfResult13 = Context.Map.Drifts_01.ExecutionStateSource;/*3317*/	}/*3318*/	Context.Map.Drifts_01.ExecutionState = ENiagaraExecutionState_IfResult13;/*3319*/	Context.Map.Drifts_01.ExecutionStateSource = ENiagaraExecutionStateSource_IfResult13;/*3320*/}/*3321*//*3322*/void EmitterState_Drifts_01_Func_(inout FSimulationContext Context)/*3323*/{/*3324*/	bool Result165 = NiagaraAll(Context.Map.Drifts_01.Age <= Context.Map.Engine.DeltaTime);/*3325*/	Context.Map.Transient.FirstFrame = Result165;/*3326*/	Context.Map.Local.EmitterState.PreviousEmitterState = Context.Map.Drifts_01.ExecutionState;/*3327*/	float Constant135 = 65500;/*3328*/	Context.Map.Local.EmitterState.LoopDuration = Constant135;/*3329*/	float Constant136 = 0;/*3330*/	float Constant137 = 0;/*3331*/	bool Result166 = NiagaraAll(Context.Map.Drifts_01.Age == Constant137);/*3332*/	float Duration_IfResult4;/*3333*/	if(Result166)/*3334*/	{/*3335*/	Duration_IfResult4 = Context.Map.Local.EmitterState.LoopDuration;/*3336*/	}/*3337*/	else/*3338*/	{/*3339*/	Duration_IfResult4 = Context.Map.Drifts_01.CurrentLoopDuration;/*3340*/	}/*3341*/	float Constant138 = 0;/*3342*/	Context.Map.Drifts_01.CurrentLoopDuration = Duration_IfResult4;/*3343*/	Context.Map.EmitterState.LoopDelay = Constant138;/*3344*/	float Result167 = Context.Map.Drifts_01.Age + Context.Map.Engine.DeltaTime;/*3345*/	float Result168 = Context.Map.Engine.DeltaTime + Context.Map.Drifts_01.LoopedAge;/*3346*/	bool Result169 = NiagaraAll(Result168 >= Context.Map.Drifts_01.CurrentLoopDuration);/*3347*/	int Constant139 = 0;/*3348*/	Context.Map.Drifts_01.Age = Result167;/*3349*/	Context.Map.Drifts_01.LoopedAge = Result168;/*3350*/	Context.Map.Local.EmitterState.LoopCountIncreased = Result169;/*3351*/	Context.Map.Drifts_01.LoopCount = Constant139;/*3352*/	bool Constant140 = false;/*3353*/	int Constant141 = 0;/*3354*/	Context.Map.Local.EmitterState.LoopCountIncreased = Constant140;/*3355*/	Context.Map.Drifts_01.LoopCount = Constant141;/*3356*/	float Constant142 = 0;/*3357*/	float Duration_IfResult5;/*3358*/	float LoopedAge_IfResult3;/*3359*/	if(Context.Map.Local.EmitterState.LoopCountIncreased)/*3360*/	{/*3361*/	Duration_IfResult5 = Context.Map.Local.EmitterState.LoopDuration;/*3362*/	LoopedAge_IfResult3 = Constant142;/*3363*/	}/*3364*/	else/*3365*/	{/*3366*/	Duration_IfResult5 = Context.Map.Drifts_01.CurrentLoopDuration;/*3367*/	LoopedAge_IfResult3 = Context.Map.Drifts_01.LoopedAge;/*3368*/	}/*3369*/	Context.Map.Drifts_01.CurrentLoopDuration = Duration_IfResult5;/*3370*/	Context.Map.Drifts_01.LoopedAge = LoopedAge_IfResult3;/*3371*/	float Constant143 = 0;/*3372*/	Context.Map.Drifts_01.NormalizedLoopAge = Constant143;/*3373*/	float Constant144 = 0;/*3374*/	float Constant145 = 1.0001;/*3375*/	float Result170 = clamp(Context.Map.Engine.Owner.LODDistanceFraction,Constant144,Constant145);/*3376*/	Context.Map.Drifts_01.Scalability.DistanceFraction = Result170;/*3377*/	int Constant146 = 0;/*3378*/	Context.Map.Transient.ScalabilityEmitterExecutionState = Constant146;/*3379*/	int Constant147 = 0;/*3380*/	bool Result171 = NiagaraAll(Context.Map.Engine.Drifts_01.NumParticles == Constant147);/*3381*/	Context.Map.Local.EmitterState.NoActiveEmitterParticles = Result171;/*3382*/	int Constant148 = 0;/*3383*/	bool Result172 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant148);/*3384*/	EmitterState_EmitterChangeState002_Drifts_01_Func_(Context.Map.System.ExecutionState, Result172, Context.Map.System.ExecutionStateSource, Context);/*3385*/	int Constant156 = 1;/*3386*/	int Constant157 = 1;/*3387*/	EmitterState_EmitterChangeState_Drifts_01_Func_(Constant156, Context.Map.Local.EmitterState.LoopCountIncreased, Constant157, Context);/*3388*/	int Constant165 = 1;/*3389*/	int Constant166 = 0;/*3390*/	bool Result195 = NiagaraAny(Context.Map.System.ExecutionState != Constant166);/*3391*/	int Constant167 = 2;/*3392*/	bool Result196 = NiagaraAll(Context.Map.System.ExecutionStateSource == Constant167);/*3393*/	bool Result197 = Result195 && Result196;/*3394*/	int Constant168 = 1;/*3395*/	EmitterState_EmitterChangeState005_Drifts_01_Func_(Constant165, Result197, Constant168, Context);/*3396*/	int Constant176 = 3;/*3397*/	int Constant177 = 0;/*3398*/	bool Result209 = NiagaraAny(Context.Map.Drifts_01.ExecutionState != Constant177);/*3399*/	int Constant178 = 0;/*3400*/	bool Result210 = NiagaraAny(Context.Map.Drifts_01.ExecutionStateSource != Constant178);/*3401*/	bool Result211 = Result209 && Result210;/*3402*/	bool Result212 = Context.Map.Local.EmitterState.NoActiveEmitterParticles && Result211;/*3403*/	int Constant179 = 3;/*3404*/	EmitterState_EmitterChangeState003_Drifts_01_Func_(Constant176, Result212, Constant179, Context);/*3405*/	float3 Result224 = Context.Map.Engine.Owner.Velocity * Context.Map.Engine.DeltaTime;/*3406*/	float Result225 = length(Result224);/*3407*/	float Constant187 = 1e+08;/*3408*/	float Result226 = Modulo(Context.Map.Drifts_01.DistanceTraveled, Constant187);/*3409*/	float Result227 = Result225 + Result226;/*3410*/	Context.Map.Drifts_01.DistanceTraveled = Result227;/*3411*/}/*3412*//*3413*/void enableDrifts_Drifts_01_Func_(out float Out_Output, inout FSimulationContext Context)/*3414*/{/*3415*/	float Constant188 = 1;/*3416*/	float Constant189 = 0;/*3417*/	float Constant190 = (0.0);/*3418*/	float NiagaraFloat_SelectResult12 = Constant190;/*3419*/	NiagaraFloat_SelectResult12 = Constant188;/*3420*/	if(Context.Map.enableDrifts.driftsEnable == 0)/*3421*/	{ /*3422*/	NiagaraFloat_SelectResult12 = Constant189;/*3423*/	}/*3424*/	Out_Output = NiagaraFloat_SelectResult12;/*3425*/}/*3426*//*3427*/void GetRandomInfo_Emitter_Determinism_false_Emitter_Func_(int In_Seed, int In_Engine_System_TickCount, bool In_OverrideSeed, int In_Particles_UniqueID, int In_Emitter_RandomSeed, bool In_FixedOverrideSeed, int In_RandomnessMode, out NiagaraRandInfo Out_RandomInfo, out bool Out_UseDeterministicRandoms, inout FSimulationContext Context)/*3428*/{/*3429*/	bool Constant205 = false;/*3430*/	int Constant206 = 0;/*3431*/	bool Result237 = NiagaraAll(In_RandomnessMode == Constant206);/*3432*/	bool Result238 = Constant205 && Result237;/*3433*/	int Constant207 = 1;/*3434*/	bool Result239 = NiagaraAll(In_RandomnessMode == Constant207);/*3435*/	bool Result240 = Result238 || Result239;/*3436*/	int Seed_IfResult;/*3437*/	if(In_OverrideSeed)/*3438*/	{/*3439*/	Seed_IfResult = In_Seed;/*3440*/	}/*3441*/	else/*3442*/	{/*3443*/	Seed_IfResult = Context.Map.User.Emitter.RandomSeed;/*3444*/	}/*3445*/	int Constant208 = 0;/*3446*/	int Constant209 = 0;/*3447*/	int Constant210 = 0;/*3448*/	int Seed1_IfResult;/*3449*/	int Seed2_IfResult;/*3450*/	int Seed3_IfResult;/*3451*/	if(In_FixedOverrideSeed)/*3452*/	{/*3453*/	Seed1_IfResult = Seed_IfResult;/*3454*/	Seed2_IfResult = Constant208;/*3455*/	Seed3_IfResult = Constant209;/*3456*/	}/*3457*/	else/*3458*/	{/*3459*/	Seed1_IfResult = Constant210;/*3460*/	Seed2_IfResult = Context.Map.Engine.System.TickCount;/*3461*/	Seed3_IfResult = Seed_IfResult;/*3462*/	}/*3463*/	int Constant211 = -1;/*3464*/	int Constant212 = -1;/*3465*/	int Constant213 = -1;/*3466*/	int Seed1_IfResult1;/*3467*/	int Seed2_IfResult1;/*3468*/	int Seed3_IfResult1;/*3469*/	if(Result240)/*3470*/	{/*3471*/	Seed1_IfResult1 = Seed1_IfResult;/*3472*/	Seed2_IfResult1 = Seed2_IfResult;/*3473*/	Seed3_IfResult1 = Seed3_IfResult;/*3474*/	}/*3475*/	else/*3476*/	{/*3477*/	Seed1_IfResult1 = Constant211;/*3478*/	Seed2_IfResult1 = Constant212;/*3479*/	Seed3_IfResult1 = Constant213;/*3480*/	}/*3481*/	NiagaraRandInfo Output13;/*3482*/	Output13.Seed1 = Seed1_IfResult1;/*3483*/	Output13.Seed2 = Seed2_IfResult1;/*3484*/	Output13.Seed3 = Seed3_IfResult1;/*3485*/	Out_RandomInfo = Output13;/*3486*/	Out_UseDeterministicRandoms = Result240;/*3487*/}/*3488*//*3489*/void RandomRangeFloat_Func_(float In_Min, float In_Max, int In_Seed, int In_RandomnessMode, bool In_OverrideSeed, out float Out_Result, inout FSimulationContext Context)/*3490*/{/*3491*/	int Constant200 = (0);/*3492*/	bool Constant201 = false;/*3493*/	int Constant202 = 0;/*3494*/	int Constant203 = (0);/*3495*/	bool Constant204 = false;/*3496*/	NiagaraRandInfo GetRandomInfo_Emitter_Determinism_false_Emitter_Func_Output_RandomInfo;/*3497*/	bool GetRandomInfo_Emitter_Determinism_false_Emitter_Func_Output_UseDeterministicRandoms;/*3498*/	GetRandomInfo_Emitter_Determinism_false_Emitter_Func_(In_Seed, Constant200, In_OverrideSeed, Constant202, Constant203, Constant204, In_RandomnessMode, GetRandomInfo_Emitter_Determinism_false_Emitter_Func_Output_RandomInfo, GetRandomInfo_Emitter_Determinism_false_Emitter_Func_Output_UseDeterministicRandoms, Context);/*3499*/	float Result241 = In_Max - In_Min;/*3500*/	int Seed1;/*3501*/	int Seed2;/*3502*/	int Seed3;/*3503*/	Seed1 = GetRandomInfo_Emitter_Determinism_false_Emitter_Func_Output_RandomInfo.Seed1;/*3504*/	Seed2 = GetRandomInfo_Emitter_Determinism_false_Emitter_Func_Output_RandomInfo.Seed2;/*3505*/	Seed3 = GetRandomInfo_Emitter_Determinism_false_Emitter_Func_Output_RandomInfo.Seed3;/*3506*/	float Result242 = rand_float(Result241, Seed1, Seed2, Seed3);/*3507*/	float Result243 = rand_float(Result241);/*3508*/	float Random_IfResult;/*3509*/	if(GetRandomInfo_Emitter_Determinism_false_Emitter_Func_Output_UseDeterministicRandoms)/*3510*/	{/*3511*/	Random_IfResult = Result242;/*3512*/	}/*3513*/	else/*3514*/	{/*3515*/	Random_IfResult = Result243;/*3516*/	}/*3517*/	float Result244 = In_Min + Random_IfResult;/*3518*/	Out_Result = Result244;/*3519*/}/*3520*//*3521*/void SpawnRate_Drifts_01_Func_(inout FSimulationContext Context)/*3522*/{/*3523*/	float Constant191 = 1;/*3524*/	Context.Map.Transient.ScalabilityEmitterSpawnCountScale = Constant191;/*3525*/	float Result228 = Context.Map.SpawnRate.SpawnRate * Context.Map.Transient.ScalabilityEmitterSpawnCountScale * Context.Map.Engine.Drifts_01.SpawnCountScale;/*3526*/	float Result229 = Reciprocal(Result228);/*3527*/	float Result230 = 1 - Context.Map.Drifts_01.SpawnRate.SpawnRemainder;/*3528*/	float Result231 = Result229 * Result230;/*3529*/	Context.Map.Local.SpawnRate.SpawnRate = Result228;/*3530*/	Context.Map.Local.SpawnRate.IntervalDT = Result229;/*3531*/	Context.Map.Local.SpawnRate.InterpStartDT = Result231;/*3532*/	float Constant192 = 0;/*3533*/	bool Result232 = NiagaraAll(Context.Map.Drifts_01.LoopedAge >= Constant192);/*3534*/	float Constant193 = 1;/*3535*/	float Constant194 = 0;/*3536*/	float float_IfResult3;/*3537*/	if(Result232)/*3538*/	{/*3539*/	float_IfResult3 = Constant193;/*3540*/	}/*3541*/	else/*3542*/	{/*3543*/	float_IfResult3 = Constant194;/*3544*/	}/*3545*/	float Result233 = Context.Map.Local.SpawnRate.SpawnRate * float_IfResult3;/*3546*/	float Result234 = Result233 * Context.Map.Engine.DeltaTime + Context.Map.Drifts_01.SpawnRate.SpawnRemainder;/*3547*/	float Result235 = floor(Result234);/*3548*/	float Result236 = Result234 - Result235;/*3549*/	Context.Map.Local.SpawnRate.SpawnCount = Result235;/*3550*/	Context.Map.Drifts_01.SpawnRate.SpawnRemainder = Result236;/*3551*/	float Constant195 = 0;/*3552*/	float Constant196 = 1;/*3553*/	int Constant197 = -1;/*3554*/	int Constant198 = 0;/*3555*/	bool Constant199 = false;/*3556*/	float RandomRangeFloat_Func_Output_Result;/*3557*/	RandomRangeFloat_Func_(Constant195, Constant196, Constant197, Constant198, Constant199, RandomRangeFloat_Func_Output_Result, Context);/*3558*/	int Constant214 = 0;/*3559*/	bool Result245 = NiagaraAll(RandomRangeFloat_Func_Output_Result <= Context.Map.SpawnRate.SpawnProbability);/*3560*/	int Constant215 = 0;/*3561*/	int int32_IfResult;/*3562*/	if(Result245)/*3563*/	{/*3564*/	int32_IfResult = Context.Map.Local.SpawnRate.SpawnCount;/*3565*/	}/*3566*/	else/*3567*/	{/*3568*/	int32_IfResult = Constant215;/*3569*/	}/*3570*/	NiagaraSpawnInfo Output14;/*3571*/	Output14.Count = int32_IfResult;/*3572*/	Output14.InterpStartDt = Context.Map.Local.SpawnRate.InterpStartDT;/*3573*/	Output14.IntervalDt = Context.Map.Local.SpawnRate.IntervalDT;/*3574*/	Output14.SpawnGroup = Constant214;/*3575*/	bool Constant216 = true;/*3576*/	int Constant217 = 0;/*3577*/	bool Result246 = NiagaraAll(int32_IfResult > Constant217);/*3578*/	Context.Map.Drifts_01.SpawnRate.SpawnOutputInfo = Output14;/*3579*/	Context.Map.Transient.SpawningbCanEverSpawn = Constant216;/*3580*/	Context.Map.OUTPUT_VAR.SpawnRate.HasSpawnedThisFrame = Result246;/*3581*/}/*3582*//*3583*/void Drifts_01_60697A784C6594879F9F9783C553EB85_Func_(inout FSimulationContext Context)/*3584*/{/*3585*/	EnterStatScope(10 );/*3586*/	EmitterState_Drifts_01_Func_(Context);/*3587*/	ExitStatScope();/*3588*/	Context.Map.enableDrifts.driftsEnable = Context.Map.User.driftsEnable;/*3589*/	float enableDrifts_Drifts_01_Func_Output_Output;/*3590*/	enableDrifts_Drifts_01_Func_(enableDrifts_Drifts_01_Func_Output_Output, Context);/*3591*/	Context.Map.SpawnRate.SpawnRate = Context.Map.User.driftsSpawnRate;/*3592*/	Context.Map.SpawnRate.SpawnProbability = enableDrifts_Drifts_01_Func_Output_Output;/*3593*/	EnterStatScope(11 );/*3594*/	SpawnRate_Drifts_01_Func_(Context);/*3595*/	ExitStatScope();/*3596*/}/*3597*//*3598*/float GetSpawnInterpolation()/*3599*/{/*3600*/	return 1.0f;}/*3601*//*3602*//*3603*//*3604*/void HandlePreviousValuesForSpawn(inout FSimulationContext Context)/*3605*/{/*3606*/}/*3607*//*3608*//*3609*/void ReadDataSets(inout FSimulationContext Context)/*3610*/{/*3611*/}/*3612*//*3613*/void WriteDataSets(inout FSimulationContext Context)/*3614*/{/*3615*/}/*3616*//*3617*/void Simulate(inout FSimulationContext Context)/*3618*/{/*3619*/	EnterStatScope(0 );/*3620*//*3621*//*3622*/	EnterStatScope(1 );/*3623*/	WF_CameraData_Func_(Context);/*3624*/	ExitStatScope();/*3625*/	float Constant = 0;/*3626*/	float Constant1 = 5;/*3627*/	bool Constant2 = false;/*3628*/	Context.Map.SystemState.RecalculateDurationEachLoop = Constant2;/*3629*/	int Constant3 = 0;/*3630*/	Context.Map.Transient.ScalabilityExecutionState = Constant3;/*3631*/	EnterStatScope(2 );/*3632*/	SystemState_Func_(Context);/*3633*/	ExitStatScope();/*3634*/	EnterStatScope(3 );/*3635*/	Context.Map.Engine.CPU1.ID.ID = 2;/*3636*/	CPU1_8006B2684B22DA8FCD043CAEA87C3ECE_Func_(Context);/*3637*/	ExitStatScope();/*3638*/	EnterStatScope(6 );/*3639*/	Context.Map.Engine.Snow_01.ID.ID = 1;/*3640*/	Snow_01_477229A1454A78C1CBA52499AE073DCD_Func_(Context);/*3641*/	ExitStatScope();/*3642*/	EnterStatScope(9 );/*3643*/	Context.Map.Engine.Drifts_01.ID.ID = 0;/*3644*/	Drifts_01_60697A784C6594879F9F9783C553EB85_Func_(Context);/*3645*/	ExitStatScope();/*3646*/	ExitStatScope();/*3647*/}/*3648*/void SimulateMain()/*3649*/{/*3650*/EnterStatScope(12 );/*3651*//*3652*/	FSimulationContext Context = (FSimulationContext)0;/*3653*/	Context.Map.CPU1.Age = InputDataFloat(0, 0);/*3654*/	Context.Map.CPU1.CurrentLoopDuration = InputDataFloat(0, 1);/*3655*/	Context.Map.CPU1.DistanceTraveled = InputDataFloat(0, 2);/*3656*/	Context.Map.CPU1.ExecutionState = InputDataInt(0, 0);/*3657*/	Context.Map.CPU1.ExecutionStateSource = InputDataInt(0, 1);/*3658*/	Context.Map.CPU1.LoopCount = InputDataInt(0, 2);/*3659*/	Context.Map.CPU1.LoopedAge = InputDataFloat(0, 3);/*3660*/	Context.Map.CPU1.NormalizedLoopAge = InputDataFloat(0, 4);/*3661*/	Context.Map.CPU1.Scalability.DistanceFraction = InputDataFloat(0, 5);/*3662*/	Context.Map.CPU1.SpawnBurst_Instantaneous.SpawnBurst.Count = 0;/*3663*/	Context.Map.CPU1.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt = 0.0f;/*3664*/	Context.Map.CPU1.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt = 0.0f;/*3665*/	Context.Map.CPU1.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup = 0;/*3666*/	Context.Map.Drifts_01.Age = InputDataFloat(0, 8);/*3667*/	Context.Map.Drifts_01.CurrentLoopDuration = InputDataFloat(0, 9);/*3668*/	Context.Map.Drifts_01.DistanceTraveled = InputDataFloat(0, 10);/*3669*/	Context.Map.Drifts_01.ExecutionState = InputDataInt(0, 5);/*3670*/	Context.Map.Drifts_01.ExecutionStateSource = InputDataInt(0, 6);/*3671*/	Context.Map.Drifts_01.LoopCount = InputDataInt(0, 7);/*3672*/	Context.Map.Drifts_01.LoopedAge = InputDataFloat(0, 11);/*3673*/	Context.Map.Drifts_01.NormalizedLoopAge = InputDataFloat(0, 12);/*3674*/	Context.Map.Drifts_01.Scalability.DistanceFraction = InputDataFloat(0, 13);/*3675*/	Context.Map.Drifts_01.SpawnRate.SpawnOutputInfo.Count = 0;/*3676*/	Context.Map.Drifts_01.SpawnRate.SpawnOutputInfo.InterpStartDt = 0.0f;/*3677*/	Context.Map.Drifts_01.SpawnRate.SpawnOutputInfo.IntervalDt = 0.0f;/*3678*/	Context.Map.Drifts_01.SpawnRate.SpawnOutputInfo.SpawnGroup = 0;/*3679*/	Context.Map.Drifts_01.SpawnRate.SpawnRemainder = InputDataFloat(0, 16);/*3680*/	Context.Map.Emitter.RandomSeed = InputDataInt(0, 10);/*3681*/	Context.Map.Snow_01.Age = InputDataFloat(0, 17);/*3682*/	Context.Map.Snow_01.CurrentLoopDuration = InputDataFloat(0, 18);/*3683*/	Context.Map.Snow_01.DistanceTraveled = InputDataFloat(0, 19);/*3684*/	Context.Map.Snow_01.ExecutionState = InputDataInt(0, 11);/*3685*/	Context.Map.Snow_01.ExecutionStateSource = InputDataInt(0, 12);/*3686*/	Context.Map.Snow_01.LoopCount = InputDataInt(0, 13);/*3687*/	Context.Map.Snow_01.LoopedAge = InputDataFloat(0, 20);/*3688*/	Context.Map.Snow_01.NormalizedLoopAge = InputDataFloat(0, 21);/*3689*/	Context.Map.Snow_01.Scalability.DistanceFraction = InputDataFloat(0, 22);/*3690*/	Context.Map.Snow_01.SpawnRate.SpawnOutputInfo.Count = 0;/*3691*/	Context.Map.Snow_01.SpawnRate.SpawnOutputInfo.InterpStartDt = 0.0f;/*3692*/	Context.Map.Snow_01.SpawnRate.SpawnOutputInfo.IntervalDt = 0.0f;/*3693*/	Context.Map.Snow_01.SpawnRate.SpawnOutputInfo.SpawnGroup = 0;/*3694*/	Context.Map.Snow_01.SpawnRate.SpawnRemainder = InputDataFloat(0, 25);/*3695*/	Context.Map.System.Age = InputDataFloat(0, 26);/*3696*/	Context.Map.System.bCompleteOnInactive = InputDataBool(0, 16);/*3697*/	Context.Map.System.CameraLocation.x = InputDataFloat(0, 27);/*3698*/	Context.Map.System.CameraLocation.y = InputDataFloat(0, 28);/*3699*/	Context.Map.System.CameraLocation.z = InputDataFloat(0, 29);/*3700*/	Context.Map.System.CameraRotationSpeed.x = InputDataFloat(0, 30);/*3701*/	Context.Map.System.CameraRotationSpeed.y = InputDataFloat(0, 31);/*3702*/	Context.Map.System.CameraRotationSpeed.z = InputDataFloat(0, 32);/*3703*/	Context.Map.System.CameraSpeed.x = InputDataFloat(0, 33);/*3704*/	Context.Map.System.CameraSpeed.y = InputDataFloat(0, 34);/*3705*/	Context.Map.System.CameraSpeed.z = InputDataFloat(0, 35);/*3706*/	Context.Map.System.cameraSpeedFloat = InputDataFloat(0, 36);/*3707*/	Context.Map.System.CameraUp.x = InputDataFloat(0, 37);/*3708*/	Context.Map.System.CameraUp.y = InputDataFloat(0, 38);/*3709*/	Context.Map.System.CameraUp.z = InputDataFloat(0, 39);/*3710*/	Context.Map.System.CamForward.x = InputDataFloat(0, 40);/*3711*/	Context.Map.System.CamForward.y = InputDataFloat(0, 41);/*3712*/	Context.Map.System.CamForward.z = InputDataFloat(0, 42);/*3713*/	Context.Map.System.CurrentLoopDuration = InputDataFloat(0, 43);/*3714*/	Context.Map.System.ExecutionState = InputDataInt(0, 17);/*3715*/	Context.Map.System.ExecutionStateSource = InputDataInt(0, 18);/*3716*/	Context.Map.System.LoopCount = InputDataInt(0, 19);/*3717*/	Context.Map.System.LoopedAge = InputDataFloat(0, 44);/*3718*/	Context.Map.System.NormalizedLoopAge = InputDataFloat(0, 45);/*3719*/	Context.Map.System.Num = InputDataInt(0, 20);/*3720*/	Context.Map.Engine.CPU1.NumParticles = InputDataInt(1, 0);/*3721*/	Context.Map.Engine.CPU1.SpawnCountScale = InputDataFloat(1, 0);/*3722*/	Context.Map.Engine.Drifts_01.NumParticles = InputDataInt(1, 1);/*3723*/	Context.Map.Engine.Drifts_01.SpawnCountScale = InputDataFloat(1, 1);/*3724*/	Context.Map.Engine.Emitter.InstanceSeed = InputDataInt(1, 2);/*3725*/	Context.Map.Engine.Emitter.TotalSpawnedParticles = InputDataInt(1, 3);/*3726*/	Context.Map.Engine.Owner.ExecutionState = InputDataInt(1, 4);/*3727*/	Context.Map.Engine.Owner.LODDistanceFraction = InputDataFloat(1, 2);/*3728*/	Context.Map.Engine.Owner.Position.x = InputDataFloat(1, 3);/*3729*/	Context.Map.Engine.Owner.Position.y = InputDataFloat(1, 4);/*3730*/	Context.Map.Engine.Owner.Position.z = InputDataFloat(1, 5);/*3731*/	Context.Map.Engine.Owner.Velocity.x = InputDataFloat(1, 6);/*3732*/	Context.Map.Engine.Owner.Velocity.y = InputDataFloat(1, 7);/*3733*/	Context.Map.Engine.Owner.Velocity.z = InputDataFloat(1, 8);/*3734*/	Context.Map.Engine.Snow_01.NumParticles = InputDataInt(1, 5);/*3735*/	Context.Map.Engine.Snow_01.SpawnCountScale = InputDataFloat(1, 9);/*3736*/	Context.Map.Engine.System.RandomSeed = InputDataInt(1, 6);/*3737*/	Context.Map.Engine.System.TickCount = InputDataInt(1, 7);/*3738*/	Context.Map.User.driftsEnable = InputDataBool(1, 8);/*3739*/	Context.Map.User.driftsSpawnRate = InputDataFloat(1, 10);/*3740*/	Context.Map.User.Emitter.RandomSeed = InputDataInt(1, 9);/*3741*/	Context.Map.User.spawnRate = InputDataFloat(1, 11);/*3742*/	Context.Map.Engine.DeltaTime = Engine_DeltaTime;/*3743*/	Context.Map.Emitter.RandomSeed = Emitter_RandomSeed;/*3744*/	ReadDataSets(Context);/*3745*/	Context.Map.Engine.ExecIndex = ExecIndex();/*3746*/	Context.Map.Engine.Emitter.ID.ID = -1;/*3747*/EnterStatScope(13 );/*3748*/	Simulate(Context);/*3749*/ExitStatScope();/*3750*/	WriteDataSets(Context);/*3751*/	{/*3752*/	int TmpWriteIndex = OutputIndex(0, false, true);/*3753*/	OutputDataFloat(0, 0, TmpWriteIndex, Context.Map.CPU1.Age);/*3754*/	OutputDataFloat(0, 1, TmpWriteIndex, Context.Map.CPU1.CurrentLoopDuration);/*3755*/	OutputDataFloat(0, 2, TmpWriteIndex, Context.Map.CPU1.DistanceTraveled);/*3756*/	OutputDataInt(0, 0, TmpWriteIndex, Context.Map.CPU1.ExecutionState);/*3757*/	OutputDataInt(0, 1, TmpWriteIndex, Context.Map.CPU1.ExecutionStateSource);/*3758*/	OutputDataInt(0, 2, TmpWriteIndex, Context.Map.CPU1.LoopCount);/*3759*/	OutputDataFloat(0, 3, TmpWriteIndex, Context.Map.CPU1.LoopedAge);/*3760*/	OutputDataFloat(0, 4, TmpWriteIndex, Context.Map.CPU1.NormalizedLoopAge);/*3761*/	OutputDataFloat(0, 5, TmpWriteIndex, Context.Map.CPU1.Scalability.DistanceFraction);/*3762*/	OutputDataInt(0, 3, TmpWriteIndex, Context.Map.CPU1.SpawnBurst_Instantaneous.SpawnBurst.Count);/*3763*/	OutputDataFloat(0, 6, TmpWriteIndex, Context.Map.CPU1.SpawnBurst_Instantaneous.SpawnBurst.InterpStartDt);/*3764*/	OutputDataFloat(0, 7, TmpWriteIndex, Context.Map.CPU1.SpawnBurst_Instantaneous.SpawnBurst.IntervalDt);/*3765*/	OutputDataInt(0, 4, TmpWriteIndex, Context.Map.CPU1.SpawnBurst_Instantaneous.SpawnBurst.SpawnGroup);/*3766*/	OutputDataFloat(0, 8, TmpWriteIndex, Context.Map.Drifts_01.Age);/*3767*/	OutputDataFloat(0, 9, TmpWriteIndex, Context.Map.Drifts_01.CurrentLoopDuration);/*3768*/	OutputDataFloat(0, 10, TmpWriteIndex, Context.Map.Drifts_01.DistanceTraveled);/*3769*/	OutputDataInt(0, 5, TmpWriteIndex, Context.Map.Drifts_01.ExecutionState);/*3770*/	OutputDataInt(0, 6, TmpWriteIndex, Context.Map.Drifts_01.ExecutionStateSource);/*3771*/	OutputDataInt(0, 7, TmpWriteIndex, Context.Map.Drifts_01.LoopCount);/*3772*/	OutputDataFloat(0, 11, TmpWriteIndex, Context.Map.Drifts_01.LoopedAge);/*3773*/	OutputDataFloat(0, 12, TmpWriteIndex, Context.Map.Drifts_01.NormalizedLoopAge);/*3774*/	OutputDataFloat(0, 13, TmpWriteIndex, Context.Map.Drifts_01.Scalability.DistanceFraction);/*3775*/	OutputDataInt(0, 8, TmpWriteIndex, Context.Map.Drifts_01.SpawnRate.SpawnOutputInfo.Count);/*3776*/	OutputDataFloat(0, 14, TmpWriteIndex, Context.Map.Drifts_01.SpawnRate.SpawnOutputInfo.InterpStartDt);/*3777*/	OutputDataFloat(0, 15, TmpWriteIndex, Context.Map.Drifts_01.SpawnRate.SpawnOutputInfo.IntervalDt);/*3778*/	OutputDataInt(0, 9, TmpWriteIndex, Context.Map.Drifts_01.SpawnRate.SpawnOutputInfo.SpawnGroup);/*3779*/	OutputDataFloat(0, 16, TmpWriteIndex, Context.Map.Drifts_01.SpawnRate.SpawnRemainder);/*3780*/	OutputDataInt(0, 10, TmpWriteIndex, Context.Map.Emitter.RandomSeed);/*3781*/	OutputDataFloat(0, 17, TmpWriteIndex, Context.Map.Snow_01.Age);/*3782*/	OutputDataFloat(0, 18, TmpWriteIndex, Context.Map.Snow_01.CurrentLoopDuration);/*3783*/	OutputDataFloat(0, 19, TmpWriteIndex, Context.Map.Snow_01.DistanceTraveled);/*3784*/	OutputDataInt(0, 11, TmpWriteIndex, Context.Map.Snow_01.ExecutionState);/*3785*/	OutputDataInt(0, 12, TmpWriteIndex, Context.Map.Snow_01.ExecutionStateSource);/*3786*/	OutputDataInt(0, 13, TmpWriteIndex, Context.Map.Snow_01.LoopCount);/*3787*/	OutputDataFloat(0, 20, TmpWriteIndex, Context.Map.Snow_01.LoopedAge);/*3788*/	OutputDataFloat(0, 21, TmpWriteIndex, Context.Map.Snow_01.NormalizedLoopAge);/*3789*/	OutputDataFloat(0, 22, TmpWriteIndex, Context.Map.Snow_01.Scalability.DistanceFraction);/*3790*/	OutputDataInt(0, 14, TmpWriteIndex, Context.Map.Snow_01.SpawnRate.SpawnOutputInfo.Count);/*3791*/	OutputDataFloat(0, 23, TmpWriteIndex, Context.Map.Snow_01.SpawnRate.SpawnOutputInfo.InterpStartDt);/*3792*/	OutputDataFloat(0, 24, TmpWriteIndex, Context.Map.Snow_01.SpawnRate.SpawnOutputInfo.IntervalDt);/*3793*/	OutputDataInt(0, 15, TmpWriteIndex, Context.Map.Snow_01.SpawnRate.SpawnOutputInfo.SpawnGroup);/*3794*/	OutputDataFloat(0, 25, TmpWriteIndex, Context.Map.Snow_01.SpawnRate.SpawnRemainder);/*3795*/	OutputDataFloat(0, 26, TmpWriteIndex, Context.Map.System.Age);/*3796*/	OutputDataBool(0, 16, TmpWriteIndex, Context.Map.System.bCompleteOnInactive);/*3797*/	OutputDataFloat(0, 27, TmpWriteIndex, Context.Map.System.CameraLocation.x);/*3798*/	OutputDataFloat(0, 28, TmpWriteIndex, Context.Map.System.CameraLocation.y);/*3799*/	OutputDataFloat(0, 29, TmpWriteIndex, Context.Map.System.CameraLocation.z);/*3800*/	OutputDataFloat(0, 30, TmpWriteIndex, Context.Map.System.CameraRotationSpeed.x);/*3801*/	OutputDataFloat(0, 31, TmpWriteIndex, Context.Map.System.CameraRotationSpeed.y);/*3802*/	OutputDataFloat(0, 32, TmpWriteIndex, Context.Map.System.CameraRotationSpeed.z);/*3803*/	OutputDataFloat(0, 33, TmpWriteIndex, Context.Map.System.CameraSpeed.x);/*3804*/	OutputDataFloat(0, 34, TmpWriteIndex, Context.Map.System.CameraSpeed.y);/*3805*/	OutputDataFloat(0, 35, TmpWriteIndex, Context.Map.System.CameraSpeed.z);/*3806*/	OutputDataFloat(0, 36, TmpWriteIndex, Context.Map.System.cameraSpeedFloat);/*3807*/	OutputDataFloat(0, 37, TmpWriteIndex, Context.Map.System.CameraUp.x);/*3808*/	OutputDataFloat(0, 38, TmpWriteIndex, Context.Map.System.CameraUp.y);/*3809*/	OutputDataFloat(0, 39, TmpWriteIndex, Context.Map.System.CameraUp.z);/*3810*/	OutputDataFloat(0, 40, TmpWriteIndex, Context.Map.System.CamForward.x);/*3811*/	OutputDataFloat(0, 41, TmpWriteIndex, Context.Map.System.CamForward.y);/*3812*/	OutputDataFloat(0, 42, TmpWriteIndex, Context.Map.System.CamForward.z);/*3813*/	OutputDataFloat(0, 43, TmpWriteIndex, Context.Map.System.CurrentLoopDuration);/*3814*/	OutputDataInt(0, 17, TmpWriteIndex, Context.Map.System.ExecutionState);/*3815*/	OutputDataInt(0, 18, TmpWriteIndex, Context.Map.System.ExecutionStateSource);/*3816*/	OutputDataInt(0, 19, TmpWriteIndex, Context.Map.System.LoopCount);/*3817*/	OutputDataFloat(0, 44, TmpWriteIndex, Context.Map.System.LoopedAge);/*3818*/	OutputDataFloat(0, 45, TmpWriteIndex, Context.Map.System.NormalizedLoopAge);/*3819*/	OutputDataInt(0, 20, TmpWriteIndex, Context.Map.System.Num);/*3820*/	}/*3821*/ExitStatScope();/*3822*/}/*3823*/#line 878 "/Plugin/FX/Niagara/Private/NiagaraEmitterInstanceShader.usf"/*3824*/